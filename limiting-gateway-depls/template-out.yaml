---
# Source: consul/templates/connect-injector-disruptionbudget.yaml
# PodDisruptionBudget to prevent degrading the connectInject cluster through
# voluntary cluster changes.
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: consul-connect-injector
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: consul
      release: "consul"
      component: connect-injector
---
# Source: consul/templates/server-disruptionbudget.yaml
# PodDisruptionBudget to prevent degrading the server cluster through
# voluntary cluster changes.
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: consul
      release: "consul"
      component: server
---
# Source: consul/templates/connect-inject-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-connect-injector
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
---
# Source: consul/templates/gateway-cleanup-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-gateway-cleanup
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-cleanup
---
# Source: consul/templates/gateway-resources-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-gateway-resources
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-resources
---
# Source: consul/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
---
# Source: consul/templates/webhook-cert-manager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-webhook-cert-manager
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
---
# Source: consul/templates/gateway-resources-configmap.yaml
# Configuration of Gateway Resources Job which creates managed Gateway configuration.
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-gateway-resources-config
  namespace: default
  labels: 
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-resources
data:
  resources.json: {"limits":{"cpu":"212m","memory":"212Mi"},"requests":{"cpu":"121m","memory":"121Mi"}}
---
# Source: consul/templates/server-config-configmap.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-server-config
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
data:
  server.json: |
    {
      "bind_addr": "0.0.0.0",
      "bootstrap_expect": 1,
      "client_addr": "0.0.0.0",
      "connect": {
        "enabled": true
      },
      "datacenter": "dc1",
      "data_dir": "/consul/data",
      "domain": "consul",
      "limits": {
        "request_limits": {
          "mode": "disabled",
          "read_rate": -1,
          "write_rate": -1
        }
      },
      "ports": {
        "grpc": 8502,
        "grpc_tls": -1,
        "serf_lan": 8301
      },
      "recursors": [],
      "retry_join": ["consul-server.default.svc:8301"],
      "server": true
    }
  extra-from-values.json: |-
    {}
    
  ui-config.json: |-
    {
      "ui_config": {
        "enabled": true
      }
    }
  central-config.json: |-
    {
      "enable_central_service_config": true
    }
---
# Source: consul/templates/webhook-cert-manager-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-webhook-cert-manager-config
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
data:
  webhook-config.json: |-
    [
      {
        "name": "consul-connect-injector",
        "tlsAutoHosts": [
          "consul-connect-injector",
          "consul-connect-injector.default",
          "consul-connect-injector.default.svc",
          "consul-connect-injector.default.svc.cluster.local"
        ],
        "secretName": "consul-connect-inject-webhook-cert",
        "secretNamespace": "default"
      }
    ]
---
# Source: consul/templates/crd-controlplanerequestlimits.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: controlplanerequestlimits.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ControlPlaneRequestLimit
    listKind: ControlPlaneRequestLimitList
    plural: controlplanerequestlimits
    singular: controlplanerequestlimit
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ControlPlaneRequestLimit is the Schema for the controlplanerequestlimits
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneRequestLimitSpec defines the desired state of
              ControlPlaneRequestLimit.
            properties:
              acl:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              catalog:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              configEntry:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              connectCA:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              coordinate:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              discoveryChain:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              health:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              intention:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              kv:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              mode:
                type: string
              perparedQuery:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              readRate:
                type: number
              session:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              tenancy:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              txn:
                properties:
                  readRate:
                    type: number
                  writeRate:
                    type: number
                type: object
              writeRate:
                type: number
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-exportedservices.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: exportedservices.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ExportedServices
    listKind: ExportedServicesList
    plural: exportedservices
    shortNames:
    - exported-services
    singular: exportedservices
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExportedServices is the Schema for the exportedservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExportedServicesSpec defines the desired state of ExportedServices.
            properties:
              services:
                description: Services is a list of services to be exported and the
                  list of partitions to expose them to.
                items:
                  description: ExportedService manages the exporting of a service
                    in the local partition to other partitions.
                  properties:
                    consumers:
                      description: Consumers is a list of downstream consumers of
                        the service to be exported.
                      items:
                        description: ServiceConsumer represents a downstream consumer
                          of the service to be exported.
                        properties:
                          partition:
                            description: Partition is the admin partition to export
                              the service to.
                            type: string
                          peer:
                            description: Peer is the name of the peer to export the
                              service to.
                            type: string
                          samenessGroup:
                            description: SamenessGroup is the name of the sameness
                              group to export the service to.
                            type: string
                        type: object
                      type: array
                    name:
                      description: Name is the name of the service to be exported.
                      type: string
                    namespace:
                      description: Namespace is the namespace to export the service
                        from.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-gatewayclassconfigs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: gatewayclassconfigs.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: GatewayClassConfig
    listKind: GatewayClassConfigList
    plural: gatewayclassconfigs
    singular: gatewayclassconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GatewayClassConfig defines the values that may be set on a GatewayClass
          for Consul API Gateway.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClassConfig.
            properties:
              copyAnnotations:
                description: Annotation Information to copy to services or deployments
                properties:
                  service:
                    description: List of annotations to copy to the gateway service.
                    items:
                      type: string
                    type: array
                type: object
              deployment:
                description: Deployment defines the deployment configuration for the
                  gateway.
                properties:
                  defaultInstances:
                    default: 1
                    description: Number of gateway instances that should be deployed
                      by default
                    format: int32
                    maximum: 8
                    minimum: 1
                    type: integer
                  maxInstances:
                    default: 8
                    description: Max allowed number of gateway instances
                    format: int32
                    maximum: 8
                    minimum: 1
                    type: integer
                  minInstances:
                    default: 1
                    description: Minimum allowed number of gateway instances
                    format: int32
                    maximum: 8
                    minimum: 1
                    type: integer
                type: object
              mapPrivilegedContainerPorts:
                description: The value to add to privileged ports ( ports < 1024)
                  for gateway containers
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: 'NodeSelector is a selector which must be true for the
                  pod to fit on a node. Selector which must match a node''s labels
                  for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                type: object
              openshiftSCCName:
                description: The name of the OpenShift SecurityContextConstraints
                  resource for this gateway class to use.
                type: string
              podSecurityPolicy:
                description: The name of an existing Kubernetes PodSecurityPolicy
                  to bind to the managed ServiceAccount if ACLs are managed.
                type: string
              resources:
                description: Resources defines the resource requirements for the gateway.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceType:
                description: Service Type string describes ingress methods for a service
                enum:
                - ClusterIP
                - NodePort
                - LoadBalancer
                type: string
              tolerations:
                description: 'Tolerations allow the scheduler to schedule nodes with
                  matching taints. More Info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/'
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-gatewayclasses.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gatewayclasses.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    shortNames:
      - gc
    singular: gatewayclass
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.controllerName
          name: Controller
          type: string
        - jsonPath: .status.conditions[?(@.type=="Accepted")].status
          name: Accepted
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .spec.description
          name: Description
          priority: 1
          type: string
      deprecated: true
      deprecationWarning: The v1alpha2 version of GatewayClass has been deprecated and will be removed in a future release of the API. Please upgrade to v1beta1.
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "GatewayClass describes a class of Gateways available to the user for creating Gateway resources. \n It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are not propagated down to existing Gateways. This recommendation is intended to limit the blast radius of changes to GatewayClass or associated parameters. If implementations choose to propagate GatewayClass changes to existing Gateways, that MUST be clearly documented by the implementation. \n Whenever one or more Gateways are using a GatewayClass, implementations MUST add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the associated GatewayClass. This ensures that a GatewayClass associated with a Gateway is not deleted while in use. \n GatewayClass is a Cluster level resource."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of GatewayClass.
              properties:
                controllerName:
                  description: "ControllerName is the name of the controller that is managing Gateways of this class. The value of this field MUST be a domain prefixed path. \n Example: \"example.net/gateway-controller\". \n This field is not mutable and cannot be empty. \n Support: Core"
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                  type: string
                description:
                  description: Description helps describe a GatewayClass with more details.
                  maxLength: 64
                  type: string
                parametersRef:
                  description: "ParametersRef is a reference to a resource that contains the configuration parameters corresponding to the GatewayClass. This is optional if the controller does not require any additional configuration. \n ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap, or an implementation-specific custom resource. The resource can be cluster-scoped or namespace-scoped. \n If the referent cannot be found, the GatewayClass's \"InvalidParameters\" status condition will be true. \n Support: Implementation-specific"
                  properties:
                    group:
                      description: Group is the group of the referent.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is kind of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace is the namespace of the referent. This field is required when referring to a Namespace-scoped resource and MUST be unset when referring to a Cluster-scoped resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                    - group
                    - kind
                    - name
                  type: object
              required:
                - controllerName
              type: object
            status:
              default:
                conditions:
                  - lastTransitionTime: "1970-01-01T00:00:00Z"
                    message: Waiting for controller
                    reason: Waiting
                    status: Unknown
                    type: Accepted
              description: Status defines the current state of GatewayClass.
              properties:
                conditions:
                  default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                  description: "Conditions is the current status from the controller for this GatewayClass. \n Controllers should prefer to publish conditions using values of GatewayClassConditionType for the type of each Condition."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 8
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.controllerName
          name: Controller
          type: string
        - jsonPath: .status.conditions[?(@.type=="Accepted")].status
          name: Accepted
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .spec.description
          name: Description
          priority: 1
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "GatewayClass describes a class of Gateways available to the user for creating Gateway resources. \n It is recommended that this resource be used as a template for Gateways. This means that a Gateway is based on the state of the GatewayClass at the time it was created and changes to the GatewayClass or associated parameters are not propagated down to existing Gateways. This recommendation is intended to limit the blast radius of changes to GatewayClass or associated parameters. If implementations choose to propagate GatewayClass changes to existing Gateways, that MUST be clearly documented by the implementation. \n Whenever one or more Gateways are using a GatewayClass, implementations MUST add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the associated GatewayClass. This ensures that a GatewayClass associated with a Gateway is not deleted while in use. \n GatewayClass is a Cluster level resource."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of GatewayClass.
              properties:
                controllerName:
                  description: "ControllerName is the name of the controller that is managing Gateways of this class. The value of this field MUST be a domain prefixed path. \n Example: \"example.net/gateway-controller\". \n This field is not mutable and cannot be empty. \n Support: Core"
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                  type: string
                description:
                  description: Description helps describe a GatewayClass with more details.
                  maxLength: 64
                  type: string
                parametersRef:
                  description: "ParametersRef is a reference to a resource that contains the configuration parameters corresponding to the GatewayClass. This is optional if the controller does not require any additional configuration. \n ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap, or an implementation-specific custom resource. The resource can be cluster-scoped or namespace-scoped. \n If the referent cannot be found, the GatewayClass's \"InvalidParameters\" status condition will be true. \n Support: Implementation-specific"
                  properties:
                    group:
                      description: Group is the group of the referent.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is kind of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: Namespace is the namespace of the referent. This field is required when referring to a Namespace-scoped resource and MUST be unset when referring to a Cluster-scoped resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                    - group
                    - kind
                    - name
                  type: object
              required:
                - controllerName
              type: object
            status:
              default:
                conditions:
                  - lastTransitionTime: "1970-01-01T00:00:00Z"
                    message: Waiting for controller
                    reason: Waiting
                    status: Unknown
                    type: Accepted
              description: Status defines the current state of GatewayClass.
              properties:
                conditions:
                  default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                  description: "Conditions is the current status from the controller for this GatewayClass. \n Controllers should prefer to publish conditions using values of GatewayClassConditionType for the type of each Condition."
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 8
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-gateways.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
      - gtw
    singular: gateway
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.gatewayClassName
          name: Class
          type: string
        - jsonPath: .status.addresses[*].value
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=="Programmed")].status
          name: Programmed
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: The v1alpha2 version of Gateway has been deprecated and will be removed in a future release of the API. Please upgrade to v1beta1.
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Gateway represents an instance of a service-traffic handling infrastructure by binding Listeners to a set of IP addresses.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of Gateway.
              properties:
                addresses:
                  description: "Addresses requested for this Gateway. This is optional and behavior can depend on the implementation. If a value is set in the spec and the requested address is invalid or unavailable, the implementation MUST indicate this in the associated entry in GatewayStatus.Addresses. \n The Addresses field represents a request for the address(es) on the \"outside of the Gateway\", that traffic bound for this Gateway will use. This could be the IP address or hostname of an external load balancer or other networking infrastructure, or some other address that traffic will be sent to. \n The .listener.hostname field is used to route traffic that has already arrived at the Gateway to the correct in-cluster destination. \n If no Addresses are specified, the implementation MAY schedule the Gateway in an implementation-specific manner, assigning an appropriate set of Addresses. \n The implementation MUST bind all Listeners to every GatewayAddress that it assigns to the Gateway and add a corresponding entry in GatewayStatus.Addresses. \n Support: Extended"
                  items:
                    description: GatewayAddress describes an address that can be bound to a Gateway.
                    properties:
                      type:
                        default: IPAddress
                        description: Type of the address.
                        maxLength: 253
                        minLength: 1
                        pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      value:
                        description: "Value of the address. The validity of the values will depend on the type and support by the controller. \n Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - value
                    type: object
                  maxItems: 16
                  type: array
                gatewayClassName:
                  description: GatewayClassName used for this Gateway. This is the name of a GatewayClass resource.
                  maxLength: 253
                  minLength: 1
                  type: string
                listeners:
                  description: "Listeners associated with this Gateway. Listeners define logical endpoints that are bound on this Gateway's addresses. At least one Listener MUST be specified. \n Each listener in a Gateway must have a unique combination of Hostname, Port, and Protocol. \n An implementation MAY group Listeners by Port and then collapse each group of Listeners into a single Listener if the implementation determines that the Listeners in the group are \"compatible\". An implementation MAY also group together and collapse compatible Listeners belonging to different Gateways. \n For example, an implementation might consider Listeners to be compatible with each other if all of the following conditions are met: \n 1. Either each Listener within the group specifies the \"HTTP\"    Protocol or each Listener within the group specifies either    the \"HTTPS\" or \"TLS\" Protocol. \n 2. Each Listener within the group specifies a Hostname that is unique    within the group. \n 3. As a special case, one Listener within a group may omit Hostname,    in which case this Listener matches when no other Listener    matches. \n If the implementation does collapse compatible Listeners, the hostname provided in the incoming client request MUST be matched to a Listener to find the correct set of Routes. The incoming hostname MUST be matched using the Hostname field for each Listener in order of most to least specific. That is, exact matches must be processed before wildcard matches. \n If this field specifies multiple Listeners that have the same Port value but are not compatible, the implementation must raise a \"Conflicted\" condition in the Listener status. \n Support: Core"
                  items:
                    description: Listener embodies the concept of a logical endpoint where a Gateway accepts network connections.
                    properties:
                      allowedRoutes:
                        default:
                          namespaces:
                            from: Same
                        description: "AllowedRoutes defines the types of routes that MAY be attached to a Listener and the trusted namespaces where those Route resources MAY be present. \n Although a client request may match multiple route rules, only one rule may ultimately receive the request. Matching precedence MUST be determined in order of the following criteria: \n * The most specific match as defined by the Route type. * The oldest Route based on creation timestamp. For example, a Route with   a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over   a Route with a creation timestamp of \"2020-09-08 01:02:04\". * If everything else is equivalent, the Route appearing first in   alphabetical order (namespace/name) should be given precedence. For   example, foo/bar is given precedence over foo/baz. \n All valid rules within a Route attached to this Listener should be implemented. Invalid Route rules can be ignored (sometimes that will mean the full Route). If a Route rule transitions from valid to invalid, support for that Route rule should be dropped to ensure consistency. For example, even if a filter specified by a Route rule is invalid, the rest of the rules within that Route should still be supported. \n Support: Core"
                        properties:
                          kinds:
                            description: "Kinds specifies the groups and kinds of Routes that are allowed to bind to this Gateway Listener. When unspecified or empty, the kinds of Routes selected are determined using the Listener protocol. \n A RouteGroupKind MUST correspond to kinds of Routes that are compatible with the application protocol specified in the Listener's Protocol field. If an implementation does not support or recognize this resource type, it MUST set the \"ResolvedRefs\" condition to False for this Listener with the \"InvalidRouteKinds\" reason. \n Support: Core"
                            items:
                              description: RouteGroupKind indicates the group and kind of a Route resource.
                              properties:
                                group:
                                  default: gateway.networking.k8s.io
                                  description: Group is the group of the Route.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is the kind of the Route.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                              required:
                                - kind
                              type: object
                            maxItems: 8
                            type: array
                          namespaces:
                            default:
                              from: Same
                            description: "Namespaces indicates namespaces from which Routes may be attached to this Listener. This is restricted to the namespace of this Gateway by default. \n Support: Core"
                            properties:
                              from:
                                default: Same
                                description: "From indicates where Routes will be selected for this Gateway. Possible values are: * All: Routes in all namespaces may be used by this Gateway. * Selector: Routes in namespaces selected by the selector may be used by   this Gateway. * Same: Only Routes in the same namespace may be used by this Gateway. \n Support: Core"
                                enum:
                                  - All
                                  - Selector
                                  - Same
                                type: string
                              selector:
                                description: "Selector must be specified when From is set to \"Selector\". In that case, only Routes in Namespaces matching this Selector will be selected by this Gateway. This field is ignored for other values of \"From\". \n Support: Core"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                            type: object
                        type: object
                      hostname:
                        description: "Hostname specifies the virtual hostname to match for protocol types that define this concept. When unspecified, all hostnames are matched. This field is ignored for protocols that don't require hostname based matching. \n Implementations MUST apply Hostname matching appropriately for each of the following protocols: \n * TLS: The Listener Hostname MUST match the SNI. * HTTP: The Listener Hostname MUST match the Host header of the request. * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP   protocol layers as described above. If an implementation does not   ensure that both the SNI and Host header match the Listener hostname,   it MUST clearly document that. \n For HTTPRoute and TLSRoute resources, there is an interaction with the `spec.hostnames` array. When both listener and route specify hostnames, there MUST be an intersection between the values for a Route to be accepted. For more information, refer to the Route specific Hostnames documentation. \n Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      name:
                        description: "Name is the name of the Listener. This name MUST be unique within a Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      port:
                        description: "Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules. \n Support: Core"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      protocol:
                        description: "Protocol specifies the network protocol this listener expects to receive. \n Support: Core"
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                        type: string
                      tls:
                        description: "TLS is the TLS configuration for the Listener. This field is required if the Protocol field is \"HTTPS\" or \"TLS\". It is invalid to set this field if the Protocol field is \"HTTP\", \"TCP\", or \"UDP\". \n The association of SNIs to Certificate defined in GatewayTLSConfig is defined based on the Hostname field for this listener. \n The GatewayClass MUST use the longest matching SNI out of all available certificates for any TLS handshake. \n Support: Core"
                        properties:
                          certificateRefs:
                            description: "CertificateRefs contains a series of references to Kubernetes objects that contains TLS certificates and private keys. These certificates are used to establish a TLS handshake for requests that match the hostname of the associated listener. \n A single CertificateRef to a Kubernetes Secret has \"Core\" support. Implementations MAY choose to support attaching multiple certificates to a Listener, but this behavior is implementation-specific. \n References to a resource in different namespace are invalid UNLESS there is a ReferenceGrant in the target namespace that allows the certificate to be attached. If a ReferenceGrant does not allow this reference, the \"ResolvedRefs\" condition MUST be set to False for this listener with the \"RefNotPermitted\" reason. \n This field is required to have at least one element when the mode is set to \"Terminate\" (default) and is optional otherwise. \n CertificateRefs can reference to standard Kubernetes resources, i.e. Secret, or implementation-specific custom resources. \n Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls \n Support: Implementation-specific (More than one reference or other resource types)"
                            items:
                              description: "SecretObjectReference identifies an API object including its namespace, defaulting to Secret. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. \n References to objects with invalid Group and Kind are not valid, and must be rejected by the implementation, with appropriate Conditions set on the containing object."
                              properties:
                                group:
                                  default: ""
                                  description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  default: Secret
                                  description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              required:
                                - name
                              type: object
                            maxItems: 64
                            type: array
                          mode:
                            default: Terminate
                            description: "Mode defines the TLS behavior for the TLS session initiated by the client. There are two possible modes: \n - Terminate: The TLS session between the downstream client   and the Gateway is terminated at the Gateway. This mode requires   certificateRefs to be set and contain at least one element. - Passthrough: The TLS session is NOT terminated by the Gateway. This   implies that the Gateway can't decipher the TLS stream except for   the ClientHello message of the TLS protocol.   CertificateRefs field is ignored in this mode. \n Support: Core"
                            enum:
                              - Terminate
                              - Passthrough
                            type: string
                          options:
                            additionalProperties:
                              description: AnnotationValue is the value of an annotation in Gateway API. This is used for validation of maps such as TLS options. This roughly matches Kubernetes annotation validation, although the length validation in that case is based on the entire size of the annotations struct.
                              maxLength: 4096
                              minLength: 0
                              type: string
                            description: "Options are a list of key/value pairs to enable extended TLS configuration for each implementation. For example, configuring the minimum TLS version or supported cipher suites. \n A set of common keys MAY be defined by the API in the future. To avoid any ambiguity, implementation-specific definitions MUST use domain-prefixed names, such as `example.com/my-custom-option`. Un-prefixed names are reserved for key names defined by Gateway API. \n Support: Implementation-specific"
                            maxProperties: 16
                            type: object
                        type: object
                    required:
                      - name
                      - port
                      - protocol
                    type: object
                  maxItems: 64
                  minItems: 1
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              required:
                - gatewayClassName
                - listeners
              type: object
            status:
              default:
                conditions:
                  - lastTransitionTime: "1970-01-01T00:00:00Z"
                    message: Waiting for controller
                    reason: NotReconciled
                    status: Unknown
                    type: Accepted
              description: Status defines the current state of Gateway.
              properties:
                addresses:
                  description: Addresses lists the IP addresses that have actually been bound to the Gateway. These addresses may differ from the addresses in the Spec, e.g. if the Gateway automatically assigns an address from a reserved pool.
                  items:
                    description: GatewayAddress describes an address that can be bound to a Gateway.
                    properties:
                      type:
                        default: IPAddress
                        description: Type of the address.
                        maxLength: 253
                        minLength: 1
                        pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      value:
                        description: "Value of the address. The validity of the values will depend on the type and support by the controller. \n Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - value
                    type: object
                  maxItems: 16
                  type: array
                conditions:
                  default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Programmed
                  description: "Conditions describe the current conditions of the Gateway. \n Implementations should prefer to express Gateway conditions using the `GatewayConditionType` and `GatewayConditionReason` constants so that operators and tools can converge on a common vocabulary to describe Gateway state. \n Known condition types are: \n * \"Accepted\" * \"Ready\""
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 8
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                listeners:
                  description: Listeners provide status for each unique listener port defined in the Spec.
                  items:
                    description: ListenerStatus is the status associated with a Listener.
                    properties:
                      attachedRoutes:
                        description: AttachedRoutes represents the total number of Routes that have been successfully attached to this Listener.
                        format: int32
                        type: integer
                      conditions:
                        description: Conditions describe the current condition of this listener.
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the name of the Listener that this status corresponds to.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      supportedKinds:
                        description: "SupportedKinds is the list indicating the Kinds supported by this listener. This MUST represent the kinds an implementation supports for that Listener configuration. \n If kinds are specified in Spec that are not supported, they MUST NOT appear in this list and an implementation MUST set the \"ResolvedRefs\" condition to \"False\" with the \"InvalidRouteKinds\" reason. If both valid and invalid Route kinds are specified, the implementation MUST reference the valid Route kinds that have been specified."
                        items:
                          description: RouteGroupKind indicates the group and kind of a Route resource.
                          properties:
                            group:
                              default: gateway.networking.k8s.io
                              description: Group is the group of the Route.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              description: Kind is the kind of the Route.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                          required:
                            - kind
                          type: object
                        maxItems: 8
                        type: array
                    required:
                      - attachedRoutes
                      - conditions
                      - name
                      - supportedKinds
                    type: object
                  maxItems: 64
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.gatewayClassName
          name: Class
          type: string
        - jsonPath: .status.addresses[*].value
          name: Address
          type: string
        - jsonPath: .status.conditions[?(@.type=="Programmed")].status
          name: Programmed
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Gateway represents an instance of a service-traffic handling infrastructure by binding Listeners to a set of IP addresses.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of Gateway.
              properties:
                addresses:
                  description: "Addresses requested for this Gateway. This is optional and behavior can depend on the implementation. If a value is set in the spec and the requested address is invalid or unavailable, the implementation MUST indicate this in the associated entry in GatewayStatus.Addresses. \n The Addresses field represents a request for the address(es) on the \"outside of the Gateway\", that traffic bound for this Gateway will use. This could be the IP address or hostname of an external load balancer or other networking infrastructure, or some other address that traffic will be sent to. \n The .listener.hostname field is used to route traffic that has already arrived at the Gateway to the correct in-cluster destination. \n If no Addresses are specified, the implementation MAY schedule the Gateway in an implementation-specific manner, assigning an appropriate set of Addresses. \n The implementation MUST bind all Listeners to every GatewayAddress that it assigns to the Gateway and add a corresponding entry in GatewayStatus.Addresses. \n Support: Extended"
                  items:
                    description: GatewayAddress describes an address that can be bound to a Gateway.
                    properties:
                      type:
                        default: IPAddress
                        description: Type of the address.
                        maxLength: 253
                        minLength: 1
                        pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      value:
                        description: "Value of the address. The validity of the values will depend on the type and support by the controller. \n Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - value
                    type: object
                  maxItems: 16
                  type: array
                gatewayClassName:
                  description: GatewayClassName used for this Gateway. This is the name of a GatewayClass resource.
                  maxLength: 253
                  minLength: 1
                  type: string
                listeners:
                  description: "Listeners associated with this Gateway. Listeners define logical endpoints that are bound on this Gateway's addresses. At least one Listener MUST be specified. \n Each listener in a Gateway must have a unique combination of Hostname, Port, and Protocol. \n An implementation MAY group Listeners by Port and then collapse each group of Listeners into a single Listener if the implementation determines that the Listeners in the group are \"compatible\". An implementation MAY also group together and collapse compatible Listeners belonging to different Gateways. \n For example, an implementation might consider Listeners to be compatible with each other if all of the following conditions are met: \n 1. Either each Listener within the group specifies the \"HTTP\"    Protocol or each Listener within the group specifies either    the \"HTTPS\" or \"TLS\" Protocol. \n 2. Each Listener within the group specifies a Hostname that is unique    within the group. \n 3. As a special case, one Listener within a group may omit Hostname,    in which case this Listener matches when no other Listener    matches. \n If the implementation does collapse compatible Listeners, the hostname provided in the incoming client request MUST be matched to a Listener to find the correct set of Routes. The incoming hostname MUST be matched using the Hostname field for each Listener in order of most to least specific. That is, exact matches must be processed before wildcard matches. \n If this field specifies multiple Listeners that have the same Port value but are not compatible, the implementation must raise a \"Conflicted\" condition in the Listener status. \n Support: Core"
                  items:
                    description: Listener embodies the concept of a logical endpoint where a Gateway accepts network connections.
                    properties:
                      allowedRoutes:
                        default:
                          namespaces:
                            from: Same
                        description: "AllowedRoutes defines the types of routes that MAY be attached to a Listener and the trusted namespaces where those Route resources MAY be present. \n Although a client request may match multiple route rules, only one rule may ultimately receive the request. Matching precedence MUST be determined in order of the following criteria: \n * The most specific match as defined by the Route type. * The oldest Route based on creation timestamp. For example, a Route with   a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over   a Route with a creation timestamp of \"2020-09-08 01:02:04\". * If everything else is equivalent, the Route appearing first in   alphabetical order (namespace/name) should be given precedence. For   example, foo/bar is given precedence over foo/baz. \n All valid rules within a Route attached to this Listener should be implemented. Invalid Route rules can be ignored (sometimes that will mean the full Route). If a Route rule transitions from valid to invalid, support for that Route rule should be dropped to ensure consistency. For example, even if a filter specified by a Route rule is invalid, the rest of the rules within that Route should still be supported. \n Support: Core"
                        properties:
                          kinds:
                            description: "Kinds specifies the groups and kinds of Routes that are allowed to bind to this Gateway Listener. When unspecified or empty, the kinds of Routes selected are determined using the Listener protocol. \n A RouteGroupKind MUST correspond to kinds of Routes that are compatible with the application protocol specified in the Listener's Protocol field. If an implementation does not support or recognize this resource type, it MUST set the \"ResolvedRefs\" condition to False for this Listener with the \"InvalidRouteKinds\" reason. \n Support: Core"
                            items:
                              description: RouteGroupKind indicates the group and kind of a Route resource.
                              properties:
                                group:
                                  default: gateway.networking.k8s.io
                                  description: Group is the group of the Route.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is the kind of the Route.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                              required:
                                - kind
                              type: object
                            maxItems: 8
                            type: array
                          namespaces:
                            default:
                              from: Same
                            description: "Namespaces indicates namespaces from which Routes may be attached to this Listener. This is restricted to the namespace of this Gateway by default. \n Support: Core"
                            properties:
                              from:
                                default: Same
                                description: "From indicates where Routes will be selected for this Gateway. Possible values are: * All: Routes in all namespaces may be used by this Gateway. * Selector: Routes in namespaces selected by the selector may be used by   this Gateway. * Same: Only Routes in the same namespace may be used by this Gateway. \n Support: Core"
                                enum:
                                  - All
                                  - Selector
                                  - Same
                                type: string
                              selector:
                                description: "Selector must be specified when From is set to \"Selector\". In that case, only Routes in Namespaces matching this Selector will be selected by this Gateway. This field is ignored for other values of \"From\". \n Support: Core"
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                            type: object
                        type: object
                      hostname:
                        description: "Hostname specifies the virtual hostname to match for protocol types that define this concept. When unspecified, all hostnames are matched. This field is ignored for protocols that don't require hostname based matching. \n Implementations MUST apply Hostname matching appropriately for each of the following protocols: \n * TLS: The Listener Hostname MUST match the SNI. * HTTP: The Listener Hostname MUST match the Host header of the request. * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP   protocol layers as described above. If an implementation does not   ensure that both the SNI and Host header match the Listener hostname,   it MUST clearly document that. \n For HTTPRoute and TLSRoute resources, there is an interaction with the `spec.hostnames` array. When both listener and route specify hostnames, there MUST be an intersection between the values for a Route to be accepted. For more information, refer to the Route specific Hostnames documentation. \n Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      name:
                        description: "Name is the name of the Listener. This name MUST be unique within a Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      port:
                        description: "Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules. \n Support: Core"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      protocol:
                        description: "Protocol specifies the network protocol this listener expects to receive. \n Support: Core"
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                        type: string
                      tls:
                        description: "TLS is the TLS configuration for the Listener. This field is required if the Protocol field is \"HTTPS\" or \"TLS\". It is invalid to set this field if the Protocol field is \"HTTP\", \"TCP\", or \"UDP\". \n The association of SNIs to Certificate defined in GatewayTLSConfig is defined based on the Hostname field for this listener. \n The GatewayClass MUST use the longest matching SNI out of all available certificates for any TLS handshake. \n Support: Core"
                        properties:
                          certificateRefs:
                            description: "CertificateRefs contains a series of references to Kubernetes objects that contains TLS certificates and private keys. These certificates are used to establish a TLS handshake for requests that match the hostname of the associated listener. \n A single CertificateRef to a Kubernetes Secret has \"Core\" support. Implementations MAY choose to support attaching multiple certificates to a Listener, but this behavior is implementation-specific. \n References to a resource in different namespace are invalid UNLESS there is a ReferenceGrant in the target namespace that allows the certificate to be attached. If a ReferenceGrant does not allow this reference, the \"ResolvedRefs\" condition MUST be set to False for this listener with the \"RefNotPermitted\" reason. \n This field is required to have at least one element when the mode is set to \"Terminate\" (default) and is optional otherwise. \n CertificateRefs can reference to standard Kubernetes resources, i.e. Secret, or implementation-specific custom resources. \n Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls \n Support: Implementation-specific (More than one reference or other resource types)"
                            items:
                              description: "SecretObjectReference identifies an API object including its namespace, defaulting to Secret. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid. \n References to objects with invalid Group and Kind are not valid, and must be rejected by the implementation, with appropriate Conditions set on the containing object."
                              properties:
                                group:
                                  default: ""
                                  description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  default: Secret
                                  description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                                namespace:
                                  description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                  type: string
                              required:
                                - name
                              type: object
                            maxItems: 64
                            type: array
                          mode:
                            default: Terminate
                            description: "Mode defines the TLS behavior for the TLS session initiated by the client. There are two possible modes: \n - Terminate: The TLS session between the downstream client   and the Gateway is terminated at the Gateway. This mode requires   certificateRefs to be set and contain at least one element. - Passthrough: The TLS session is NOT terminated by the Gateway. This   implies that the Gateway can't decipher the TLS stream except for   the ClientHello message of the TLS protocol.   CertificateRefs field is ignored in this mode. \n Support: Core"
                            enum:
                              - Terminate
                              - Passthrough
                            type: string
                          options:
                            additionalProperties:
                              description: AnnotationValue is the value of an annotation in Gateway API. This is used for validation of maps such as TLS options. This roughly matches Kubernetes annotation validation, although the length validation in that case is based on the entire size of the annotations struct.
                              maxLength: 4096
                              minLength: 0
                              type: string
                            description: "Options are a list of key/value pairs to enable extended TLS configuration for each implementation. For example, configuring the minimum TLS version or supported cipher suites. \n A set of common keys MAY be defined by the API in the future. To avoid any ambiguity, implementation-specific definitions MUST use domain-prefixed names, such as `example.com/my-custom-option`. Un-prefixed names are reserved for key names defined by Gateway API. \n Support: Implementation-specific"
                            maxProperties: 16
                            type: object
                        type: object
                    required:
                      - name
                      - port
                      - protocol
                    type: object
                  maxItems: 64
                  minItems: 1
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              required:
                - gatewayClassName
                - listeners
              type: object
            status:
              default:
                conditions:
                  - lastTransitionTime: "1970-01-01T00:00:00Z"
                    message: Waiting for controller
                    reason: NotReconciled
                    status: Unknown
                    type: Accepted
              description: Status defines the current state of Gateway.
              properties:
                addresses:
                  description: Addresses lists the IP addresses that have actually been bound to the Gateway. These addresses may differ from the addresses in the Spec, e.g. if the Gateway automatically assigns an address from a reserved pool.
                  items:
                    description: GatewayAddress describes an address that can be bound to a Gateway.
                    properties:
                      type:
                        default: IPAddress
                        description: Type of the address.
                        maxLength: 253
                        minLength: 1
                        pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      value:
                        description: "Value of the address. The validity of the values will depend on the type and support by the controller. \n Examples: `1.2.3.4`, `128::1`, `my-ip-address`."
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - value
                    type: object
                  maxItems: 16
                  type: array
                conditions:
                  default:
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Accepted
                    - lastTransitionTime: "1970-01-01T00:00:00Z"
                      message: Waiting for controller
                      reason: Pending
                      status: Unknown
                      type: Programmed
                  description: "Conditions describe the current conditions of the Gateway. \n Implementations should prefer to express Gateway conditions using the `GatewayConditionType` and `GatewayConditionReason` constants so that operators and tools can converge on a common vocabulary to describe Gateway state. \n Known condition types are: \n * \"Accepted\" * \"Ready\""
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 8
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                listeners:
                  description: Listeners provide status for each unique listener port defined in the Spec.
                  items:
                    description: ListenerStatus is the status associated with a Listener.
                    properties:
                      attachedRoutes:
                        description: AttachedRoutes represents the total number of Routes that have been successfully attached to this Listener.
                        format: int32
                        type: integer
                      conditions:
                        description: Conditions describe the current condition of this listener.
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the name of the Listener that this status corresponds to.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      supportedKinds:
                        description: "SupportedKinds is the list indicating the Kinds supported by this listener. This MUST represent the kinds an implementation supports for that Listener configuration. \n If kinds are specified in Spec that are not supported, they MUST NOT appear in this list and an implementation MUST set the \"ResolvedRefs\" condition to \"False\" with the \"InvalidRouteKinds\" reason. If both valid and invalid Route kinds are specified, the implementation MUST reference the valid Route kinds that have been specified."
                        items:
                          description: RouteGroupKind indicates the group and kind of a Route resource.
                          properties:
                            group:
                              default: gateway.networking.k8s.io
                              description: Group is the group of the Route.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              description: Kind is the kind of the Route.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                          required:
                            - kind
                          type: object
                        maxItems: 8
                        type: array
                    required:
                      - attachedRoutes
                      - conditions
                      - name
                      - supportedKinds
                    type: object
                  maxItems: 64
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-grpcroutes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: grpcroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: GRPCRoute
    listKind: GRPCRouteList
    plural: grpcroutes
    singular: grpcroute
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.hostnames
          name: Hostnames
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "GRPCRoute provides a way to route gRPC requests. This includes the capability to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header. Filters can be used to specify additional processing steps. Backends specify where matching requests will be routed. \n GRPCRoute falls under extended support within the Gateway API. Within the following specification, the word \"MUST\" indicates that an implementation supporting GRPCRoute must conform to the indicated requirement, but an implementation not supporting this route type need not follow the requirement unless explicitly indicated. \n Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via ALPN. If the implementation does not support this, then it MUST set the \"Accepted\" condition to \"False\" for the affected listener with a reason of \"UnsupportedProtocol\".  Implementations MAY also accept HTTP/2 connections with an upgrade from HTTP/1. \n Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST support HTTP/2 over cleartext TCP (h2c, https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial upgrade from HTTP/1.1, i.e. with prior knowledge (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation does not support this, then it MUST set the \"Accepted\" condition to \"False\" for the affected listener with a reason of \"UnsupportedProtocol\". Implementations MAY also accept HTTP/2 connections with an upgrade from HTTP/1, i.e. without prior knowledge. \n Support: Extended"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of GRPCRoute.
              properties:
                hostnames:
                  description: "Hostnames defines a set of hostnames to match against the GRPC Host header to select a GRPCRoute to process the request. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label MUST appear by itself as the first label. \n If a hostname is specified by both the Listener and GRPCRoute, there MUST be at least one intersecting hostname for the GRPCRoute to be attached to the Listener. For example: \n * A Listener with `test.example.com` as the hostname matches GRPCRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches GRPCRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `test.example.com` and `*.example.com` would both match. On the other   hand, `example.com` and `test.example.net` would not match. \n Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. \n If both the Listener and GRPCRoute have specified hostnames, any GRPCRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the GRPCRoute specified `test.example.com` and `test.example.net`, `test.example.net` MUST NOT be considered for a match. \n If both the Listener and GRPCRoute have specified hostnames, and none match with the criteria above, then the GRPCRoute MUST NOT be accepted by the implementation. The implementation MUST raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. \n If a Route (A) of type HTTPRoute or GRPCRoute is attached to a Listener and that listener already has another Route (B) of the other type attached and the intersection of the hostnames of A and B is non-empty, then the implementation MUST accept exactly one of these two routes, determined by the following criteria, in order: \n * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   \"{namespace}/{name}\". \n The rejected Route MUST raise an 'Accepted' condition with a status of 'False' in the corresponding RouteParentStatus. \n Support: Core"
                  items:
                    description: "Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n  1. IPs are not allowed.  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard     label must appear by itself as the first label. \n Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). \n Note that as per RFC1035 and RFC1123, a *label* must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed."
                    maxLength: 253
                    minLength: 1
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  maxItems: 16
                  type: array
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  default:
                    - matches:
                        - method:
                            type: Exact
                  description: Rules are a list of GRPC matchers, filters and actions.
                  items:
                    description: GRPCRouteRule defines the semantics for matching an gRPC request based on conditions (matches), processing it (filters), and forwarding the request to an API object (backendRefs).
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. \n Failure behavior here depends on how many BackendRefs are specified and how many are invalid. \n If *all* entries in BackendRefs are invalid, and there are also no filters specified in this route rule, *all* traffic which matches this rule MUST receive an `UNAVAILABLE` status. \n See the GRPCBackendRef definition for the rules about what makes a single GRPCBackendRef invalid. \n When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for requests that would have otherwise been routed to an invalid backend. If multiple backends are specified, and some are invalid, the proportion of requests that would otherwise have been routed to an invalid backend MUST receive an `UNAVAILABLE` status. \n For example, if two backends are specified with equal weights, and one is invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status. Implementations may choose how that 50 percent is determined. \n Support: Core for Kubernetes Service \n Support: Implementation-specific for any other resource \n Support for weight: Core"
                        items:
                          description: GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.
                          properties:
                            filters:
                              description: "Filters defined at this level MUST be executed if and only if the request is being forwarded to the backend defined here. \n Support: Implementation-specific (For broader support of filters, use the Filters field in GRPCRouteRule.)"
                              items:
                                description: GRPCRouteFilter defines processing steps that must be completed during the request or response lifecycle. GRPCRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                                properties:
                                  extensionRef:
                                    description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                                    properties:
                                      group:
                                        description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                    required:
                                      - group
                                      - kind
                                      - name
                                    type: object
                                  requestHeaderModifier:
                                    description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  requestMirror:
                                    description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                                    properties:
                                      backendRef:
                                        description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                        properties:
                                          group:
                                            default: ""
                                            description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            default: Service
                                            description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          namespace:
                                            description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                            type: string
                                          port:
                                            description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - backendRef
                                    type: object
                                  responseHeaderModifier:
                                    description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  type:
                                    description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations supporting GRPCRoute MUST support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` MUST be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n "
                                    enum:
                                      - ResponseHeaderModifier
                                      - RequestHeaderModifier
                                      - RequestMirror
                                      - ExtensionRef
                                    type: string
                                required:
                                  - type
                                type: object
                              maxItems: 16
                              type: array
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        type: array
                      filters:
                        description: "Filters define the filters that are applied to requests that match this rule. \n The effects of ordering of multiple behaviors are currently unspecified. This can change in the future based on feedback during the alpha stage. \n Conformance-levels at this level are defined based on the type of filter: \n - ALL core filters MUST be supported by all implementations that support   GRPCRoute. - Implementers are encouraged to support extended filters. - Implementation-specific custom filters have no API guarantees across   implementations. \n Specifying a core filter multiple times has unspecified or implementation-specific conformance. Support: Core"
                        items:
                          description: GRPCRouteFilter defines processing steps that must be completed during the request or response lifecycle. GRPCRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                          properties:
                            extensionRef:
                              description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                              properties:
                                group:
                                  description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                            requestHeaderModifier:
                              description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            requestMirror:
                              description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                              properties:
                                backendRef:
                                  description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                  properties:
                                    group:
                                      default: ""
                                      description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                    - name
                                  type: object
                              required:
                                - backendRef
                              type: object
                            responseHeaderModifier:
                              description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            type:
                              description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations supporting GRPCRoute MUST support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` MUST be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n "
                              enum:
                                - ResponseHeaderModifier
                                - RequestHeaderModifier
                                - RequestMirror
                                - ExtensionRef
                              type: string
                          required:
                            - type
                          type: object
                        maxItems: 16
                        type: array
                      matches:
                        default:
                          - method:
                              type: Exact
                        description: "Matches define conditions used for matching the rule against incoming gRPC requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. \n For example, take the following matches configuration: \n ``` matches: - method:     service: foo.bar   headers:     values:       version: 2 - method:     service: foo.bar.v2 ``` \n For a request to match against this rule, it MUST satisfy EITHER of the two conditions: \n - service of foo.bar AND contains the header `version: 2` - service of foo.bar.v2 \n See the documentation for GRPCRouteMatch on how to specify multiple match conditions to be ANDed together. \n If no matches are specified, the implementation MUST match every gRPC request. \n Proxy or Load Balancer routing configuration generated from GRPCRoutes MUST prioritize rules based on the following criteria, continuing on ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes. Precedence MUST be given to the rule with the largest number of: \n * Characters in a matching non-wildcard hostname. * Characters in a matching hostname. * Characters in a matching service. * Characters in a matching method. * Header matches. \n If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: \n * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   \"{namespace}/{name}\". \n If ties still exist within the Route that has been given precedence, matching precedence MUST be granted to the first matching rule meeting the above criteria."
                        items:
                          description: "GRPCRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. \n For example, the match below will match a gRPC request only if its service is `foo` AND it contains the `version: v1` header: \n ``` matches:   - method:     type: Exact     service: \"foo\"     headers:   - name: \"version\"     value \"v1\" \n ```"
                          properties:
                            headers:
                              description: Headers specifies gRPC request header matchers. Multiple match values are ANDed together, meaning, a request MUST match all the specified headers to select the route.
                              items:
                                description: GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request headers.
                                properties:
                                  name:
                                    description: "Name is the name of the gRPC Header to be matched. \n If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  type:
                                    default: Exact
                                    description: Type specifies how to match against the value of the header.
                                    enum:
                                      - Exact
                                      - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of the gRPC Header to be matched.
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            method:
                              default:
                                type: Exact
                              description: Method specifies a gRPC request service/method matcher. If this field is not specified, all services and methods will match.
                              properties:
                                method:
                                  description: "Value of the method to match against. If left empty or omitted, will match all services. \n At least one of Service and Method MUST be a non-empty string. \n A GRPC Method must be a valid Protobuf Method (https://protobuf.com/docs/language-spec#methods)."
                                  maxLength: 1024
                                  pattern: ^[A-Za-z_][A-Za-z_0-9]*$
                                  type: string
                                service:
                                  description: "Value of the service to match against. If left empty or omitted, will match any service. \n At least one of Service and Method MUST be a non-empty string. \n A GRPC Service must be a valid Protobuf Type Name (https://protobuf.com/docs/language-spec#type-references)."
                                  maxLength: 1024
                                  pattern: ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against the service and/or method. Support: Core (Exact with service and method specified) \n Support: Implementation-specific (Exact with method specified but no service specified) \n Support: Implementation-specific (RegularExpression)"
                                  enum:
                                    - Exact
                                    - RegularExpression
                                  type: string
                              type: object
                          type: object
                        maxItems: 8
                        type: array
                    type: object
                  maxItems: 16
                  type: array
              type: object
            status:
              description: Status defines the current state of GRPCRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-httproutes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.hostnames
          name: Hostnames
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: The v1alpha2 version of HTTPRoute has been deprecated and will be removed in a future release of the API. Please upgrade to v1beta1.
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: HTTPRoute provides a way to route HTTP requests. This includes the capability to match requests by hostname, path, header, or query param. Filters can be used to specify additional processing steps. Backends specify where matching requests should be routed.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of HTTPRoute.
              properties:
                hostnames:
                  description: "Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label must appear by itself as the first label. \n If a hostname is specified by both the Listener and HTTPRoute, there must be at least one intersecting hostname for the HTTPRoute to be attached to the Listener. For example: \n * A Listener with `test.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `*.example.com`, `test.example.com`, and `foo.test.example.com` would   all match. On the other hand, `example.com` and `test.example.net` would   not match. \n Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. \n If both the Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the HTTPRoute specified `test.example.com` and `test.example.net`, `test.example.net` must not be considered for a match. \n If both the Listener and HTTPRoute have specified hostnames, and none match with the criteria above, then the HTTPRoute is not accepted. The implementation must raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. \n In the event that multiple HTTPRoutes specify intersecting hostnames (e.g. overlapping wildcard matching and exact matching hostnames), precedence must be given to rules from the HTTPRoute with the largest number of: \n * Characters in a matching non-wildcard hostname. * Characters in a matching hostname. \n If ties exist across multiple Routes, the matching precedence rules for HTTPRouteMatches takes over. \n Support: Core"
                  items:
                    description: "Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n  1. IPs are not allowed.  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard     label must appear by itself as the first label. \n Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). \n Note that as per RFC1035 and RFC1123, a *label* must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed."
                    maxLength: 253
                    minLength: 1
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  maxItems: 16
                  type: array
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  default:
                    - matches:
                        - path:
                            type: PathPrefix
                            value: /
                  description: Rules are a list of HTTP matchers, filters and actions.
                  items:
                    description: HTTPRouteRule defines semantics for matching an HTTP request based on conditions (matches), processing it (filters), and forwarding the request to an API object (backendRefs).
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. \n Failure behavior here depends on how many BackendRefs are specified and how many are invalid. \n If *all* entries in BackendRefs are invalid, and there are also no filters specified in this route rule, *all* traffic which matches this rule MUST receive a 500 status code. \n See the HTTPBackendRef definition for the rules about what makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef is invalid, 500 status codes MUST be returned for requests that would have otherwise been routed to an invalid backend. If multiple backends are specified, and some are invalid, the proportion of requests that would otherwise have been routed to an invalid backend MUST receive a 500 status code. \n For example, if two backends are specified with equal weights, and one is invalid, 50 percent of traffic must receive a 500. Implementations may choose how that 50 percent is determined. \n Support: Core for Kubernetes Service \n Support: Implementation-specific for any other resource \n Support for weight: Core"
                        items:
                          description: HTTPBackendRef defines how a HTTPRoute should forward an HTTP request.
                          properties:
                            filters:
                              description: "Filters defined at this level should be executed if and only if the request is being forwarded to the backend defined here. \n Support: Implementation-specific (For broader support of filters, use the Filters field in HTTPRouteRule.)"
                              items:
                                description: HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                                properties:
                                  extensionRef:
                                    description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                                    properties:
                                      group:
                                        description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                    required:
                                      - group
                                      - kind
                                      - name
                                    type: object
                                  requestHeaderModifier:
                                    description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  requestMirror:
                                    description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                                    properties:
                                      backendRef:
                                        description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                        properties:
                                          group:
                                            default: ""
                                            description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            default: Service
                                            description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          namespace:
                                            description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                            type: string
                                          port:
                                            description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - backendRef
                                    type: object
                                  requestRedirect:
                                    description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                                    properties:
                                      hostname:
                                        description: "Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. \n Support: Core"
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: "Path defines parameters used to modify the path of the incoming request. The modified path is then used to construct the `Location` header. When empty, the request path is used as-is. \n Support: Extended \n <gateway:experimental>"
                                        properties:
                                          replaceFullPath:
                                            description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                            enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                            type: string
                                        required:
                                          - type
                                        type: object
                                      port:
                                        description: "Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. \n Support: Extended"
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      scheme:
                                        description: "Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Extended"
                                        enum:
                                          - http
                                          - https
                                        type: string
                                      statusCode:
                                        default: 302
                                        description: "StatusCode is the HTTP status code to be used in response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Core"
                                        enum:
                                          - 301
                                          - 302
                                        type: integer
                                    type: object
                                  responseHeaderModifier:
                                    description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  type:
                                    description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations must support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by   specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` should be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n "
                                    enum:
                                      - RequestHeaderModifier
                                      - ResponseHeaderModifier
                                      - RequestMirror
                                      - RequestRedirect
                                      - URLRewrite
                                      - ExtensionRef
                                    type: string
                                  urlRewrite:
                                    description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended \n <gateway:experimental>"
                                    properties:
                                      hostname:
                                        description: "Hostname is the value to be used to replace the Host header value during forwarding. \n Support: Extended \n <gateway:experimental>"
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: "Path defines a path rewrite. \n Support: Extended \n <gateway:experimental>"
                                        properties:
                                          replaceFullPath:
                                            description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                            enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                            type: string
                                        required:
                                          - type
                                        type: object
                                    type: object
                                required:
                                  - type
                                type: object
                              maxItems: 16
                              type: array
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        type: array
                      filters:
                        description: "Filters define the filters that are applied to requests that match this rule. \n The effects of ordering of multiple behaviors are currently unspecified. This can change in the future based on feedback during the alpha stage. \n Conformance-levels at this level are defined based on the type of filter: \n - ALL core filters MUST be supported by all implementations. - Implementers are encouraged to support extended filters. - Implementation-specific custom filters have no API guarantees across   implementations. \n Specifying a core filter multiple times has unspecified or implementation-specific conformance. \n All filters are expected to be compatible with each other except for the URLRewrite and RequestRedirect filters, which may not be combined. If an implementation can not support other combinations of filters, they must clearly document that limitation. In all cases where incompatible or unsupported filters are specified, implementations MUST add a warning condition to status. \n Support: Core"
                        items:
                          description: HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                          properties:
                            extensionRef:
                              description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                              properties:
                                group:
                                  description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                            requestHeaderModifier:
                              description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            requestMirror:
                              description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                              properties:
                                backendRef:
                                  description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                  properties:
                                    group:
                                      default: ""
                                      description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                    - name
                                  type: object
                              required:
                                - backendRef
                              type: object
                            requestRedirect:
                              description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                              properties:
                                hostname:
                                  description: "Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. \n Support: Core"
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: "Path defines parameters used to modify the path of the incoming request. The modified path is then used to construct the `Location` header. When empty, the request path is used as-is. \n Support: Extended \n <gateway:experimental>"
                                  properties:
                                    replaceFullPath:
                                      description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                      enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                      type: string
                                  required:
                                    - type
                                  type: object
                                port:
                                  description: "Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. \n Support: Extended"
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: "Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Extended"
                                  enum:
                                    - http
                                    - https
                                  type: string
                                statusCode:
                                  default: 302
                                  description: "StatusCode is the HTTP status code to be used in response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Core"
                                  enum:
                                    - 301
                                    - 302
                                  type: integer
                              type: object
                            responseHeaderModifier:
                              description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            type:
                              description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations must support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by   specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` should be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n "
                              enum:
                                - RequestHeaderModifier
                                - ResponseHeaderModifier
                                - RequestMirror
                                - RequestRedirect
                                - URLRewrite
                                - ExtensionRef
                              type: string
                            urlRewrite:
                              description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended \n <gateway:experimental>"
                              properties:
                                hostname:
                                  description: "Hostname is the value to be used to replace the Host header value during forwarding. \n Support: Extended \n <gateway:experimental>"
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: "Path defines a path rewrite. \n Support: Extended \n <gateway:experimental>"
                                  properties:
                                    replaceFullPath:
                                      description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                      enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                      type: string
                                  required:
                                    - type
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        maxItems: 16
                        type: array
                      matches:
                        default:
                          - path:
                              type: PathPrefix
                              value: /
                        description: "Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. \n For example, take the following matches configuration: \n ``` matches: - path:     value: \"/foo\"   headers:   - name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\" ``` \n For a request to match against this rule, a request must satisfy EITHER of the two conditions: \n - path prefixed with `/foo` AND contains the header `version: v2` - path prefix of `/v2/foo` \n See the documentation for HTTPRouteMatch on how to specify multiple match conditions that should be ANDed together. \n If no matches are specified, the default is a prefix path match on \"/\", which has the effect of matching every HTTP request. \n Proxy or Load Balancer routing configuration generated from HTTPRoutes MUST prioritize matches based on the following criteria, continuing on ties. Across all rules specified on applicable Routes, precedence must be given to the match with the largest number of: \n * Characters in a matching path. * Header matches. * Query param matches. \n If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: \n * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   \"{namespace}/{name}\". \n If ties still exist within an HTTPRoute, matching precedence MUST be granted to the FIRST matching rule (in list order) with a match meeting the above criteria. \n When no rules matching a request have been successfully attached to the parent a request is coming from, a HTTP 404 status code MUST be returned."
                        items:
                          description: "HTTPRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. \n For example, the match below will match a HTTP request only if its path starts with `/foo` AND it contains the `version: v1` header: \n ``` match: \n \tpath: \t  value: \"/foo\" \theaders: \t- name: \"version\" \t  value \"v1\" \n ```"
                          properties:
                            headers:
                              description: Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
                              items:
                                description: HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request headers.
                                properties:
                                  name:
                                    description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent. \n When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for \"Set-Cookie\"."
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  type:
                                    default: Exact
                                    description: "Type specifies how to match against the value of the header. \n Support: Core (Exact) \n Support: Implementation-specific (RegularExpression) \n Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect."
                                    enum:
                                      - Exact
                                      - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            method:
                              description: "Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. \n Support: Extended"
                              enum:
                                - GET
                                - HEAD
                                - POST
                                - PUT
                                - DELETE
                                - CONNECT
                                - OPTIONS
                                - TRACE
                                - PATCH
                              type: string
                            path:
                              default:
                                type: PathPrefix
                                value: /
                              description: Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
                              properties:
                                type:
                                  default: PathPrefix
                                  description: "Type specifies how to match against the path Value. \n Support: Core (Exact, PathPrefix) \n Support: Implementation-specific (RegularExpression)"
                                  enum:
                                    - Exact
                                    - PathPrefix
                                    - RegularExpression
                                  type: string
                                value:
                                  default: /
                                  description: Value of the HTTP path to match against.
                                  maxLength: 1024
                                  type: string
                              type: object
                            queryParams:
                              description: "QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. \n Support: Extended"
                              items:
                                description: HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.
                                properties:
                                  name:
                                    description: "Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). \n If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. \n If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. \n Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations."
                                    maxLength: 256
                                    minLength: 1
                                    type: string
                                  type:
                                    default: Exact
                                    description: "Type specifies how to match against the value of the query parameter. \n Support: Extended (Exact) \n Support: Implementation-specific (RegularExpression) \n Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect."
                                    enum:
                                      - Exact
                                      - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP query param to be matched.
                                    maxLength: 1024
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                          type: object
                        maxItems: 8
                        type: array
                    type: object
                  maxItems: 16
                  type: array
              type: object
            status:
              description: Status defines the current state of HTTPRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.hostnames
          name: Hostnames
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HTTPRoute provides a way to route HTTP requests. This includes the capability to match requests by hostname, path, header, or query param. Filters can be used to specify additional processing steps. Backends specify where matching requests should be routed.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of HTTPRoute.
              properties:
                hostnames:
                  description: "Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label must appear by itself as the first label. \n If a hostname is specified by both the Listener and HTTPRoute, there must be at least one intersecting hostname for the HTTPRoute to be attached to the Listener. For example: \n * A Listener with `test.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches HTTPRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `*.example.com`, `test.example.com`, and `foo.test.example.com` would   all match. On the other hand, `example.com` and `test.example.net` would   not match. \n Hostnames that are prefixed with a wildcard label (`*.`) are interpreted as a suffix match. That means that a match for `*.example.com` would match both `test.example.com`, and `foo.test.example.com`, but not `example.com`. \n If both the Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the HTTPRoute specified `test.example.com` and `test.example.net`, `test.example.net` must not be considered for a match. \n If both the Listener and HTTPRoute have specified hostnames, and none match with the criteria above, then the HTTPRoute is not accepted. The implementation must raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. \n In the event that multiple HTTPRoutes specify intersecting hostnames (e.g. overlapping wildcard matching and exact matching hostnames), precedence must be given to rules from the HTTPRoute with the largest number of: \n * Characters in a matching non-wildcard hostname. * Characters in a matching hostname. \n If ties exist across multiple Routes, the matching precedence rules for HTTPRouteMatches takes over. \n Support: Core"
                  items:
                    description: "Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n  1. IPs are not allowed.  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard     label must appear by itself as the first label. \n Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). \n Note that as per RFC1035 and RFC1123, a *label* must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed."
                    maxLength: 253
                    minLength: 1
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  maxItems: 16
                  type: array
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  default:
                    - matches:
                        - path:
                            type: PathPrefix
                            value: /
                  description: Rules are a list of HTTP matchers, filters and actions.
                  items:
                    description: HTTPRouteRule defines semantics for matching an HTTP request based on conditions (matches), processing it (filters), and forwarding the request to an API object (backendRefs).
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. \n Failure behavior here depends on how many BackendRefs are specified and how many are invalid. \n If *all* entries in BackendRefs are invalid, and there are also no filters specified in this route rule, *all* traffic which matches this rule MUST receive a 500 status code. \n See the HTTPBackendRef definition for the rules about what makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef is invalid, 500 status codes MUST be returned for requests that would have otherwise been routed to an invalid backend. If multiple backends are specified, and some are invalid, the proportion of requests that would otherwise have been routed to an invalid backend MUST receive a 500 status code. \n For example, if two backends are specified with equal weights, and one is invalid, 50 percent of traffic must receive a 500. Implementations may choose how that 50 percent is determined. \n Support: Core for Kubernetes Service \n Support: Implementation-specific for any other resource \n Support for weight: Core"
                        items:
                          description: HTTPBackendRef defines how a HTTPRoute should forward an HTTP request.
                          properties:
                            filters:
                              description: "Filters defined at this level should be executed if and only if the request is being forwarded to the backend defined here. \n Support: Implementation-specific (For broader support of filters, use the Filters field in HTTPRouteRule.)"
                              items:
                                description: HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                                properties:
                                  extensionRef:
                                    description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                                    properties:
                                      group:
                                        description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                    required:
                                      - group
                                      - kind
                                      - name
                                    type: object
                                  requestHeaderModifier:
                                    description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  requestMirror:
                                    description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                                    properties:
                                      backendRef:
                                        description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                        properties:
                                          group:
                                            default: ""
                                            description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            default: Service
                                            description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          namespace:
                                            description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                            type: string
                                          port:
                                            description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - backendRef
                                    type: object
                                  requestRedirect:
                                    description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                                    properties:
                                      hostname:
                                        description: "Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. \n Support: Core"
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: "Path defines parameters used to modify the path of the incoming request. The modified path is then used to construct the `Location` header. When empty, the request path is used as-is. \n Support: Extended \n <gateway:experimental>"
                                        properties:
                                          replaceFullPath:
                                            description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                            enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                            type: string
                                        required:
                                          - type
                                        type: object
                                      port:
                                        description: "Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. \n Support: Extended"
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      scheme:
                                        description: "Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Extended"
                                        enum:
                                          - http
                                          - https
                                        type: string
                                      statusCode:
                                        default: 302
                                        description: "StatusCode is the HTTP status code to be used in response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Core"
                                        enum:
                                          - 301
                                          - 302
                                        type: integer
                                    type: object
                                  responseHeaderModifier:
                                    description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                                    properties:
                                      add:
                                        description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                      set:
                                        description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                        items:
                                          description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                          properties:
                                            name:
                                              description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  type:
                                    description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations must support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by   specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` should be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n "
                                    enum:
                                      - RequestHeaderModifier
                                      - ResponseHeaderModifier
                                      - RequestMirror
                                      - RequestRedirect
                                      - URLRewrite
                                      - ExtensionRef
                                    type: string
                                  urlRewrite:
                                    description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended \n <gateway:experimental>"
                                    properties:
                                      hostname:
                                        description: "Hostname is the value to be used to replace the Host header value during forwarding. \n Support: Extended \n <gateway:experimental>"
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: "Path defines a path rewrite. \n Support: Extended \n <gateway:experimental>"
                                        properties:
                                          replaceFullPath:
                                            description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                            enum:
                                              - ReplaceFullPath
                                              - ReplacePrefixMatch
                                            type: string
                                        required:
                                          - type
                                        type: object
                                    type: object
                                required:
                                  - type
                                type: object
                              maxItems: 16
                              type: array
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        type: array
                      filters:
                        description: "Filters define the filters that are applied to requests that match this rule. \n The effects of ordering of multiple behaviors are currently unspecified. This can change in the future based on feedback during the alpha stage. \n Conformance-levels at this level are defined based on the type of filter: \n - ALL core filters MUST be supported by all implementations. - Implementers are encouraged to support extended filters. - Implementation-specific custom filters have no API guarantees across   implementations. \n Specifying a core filter multiple times has unspecified or implementation-specific conformance. \n All filters are expected to be compatible with each other except for the URLRewrite and RequestRedirect filters, which may not be combined. If an implementation can not support other combinations of filters, they must clearly document that limitation. In all cases where incompatible or unsupported filters are specified, implementations MUST add a warning condition to status. \n Support: Core"
                        items:
                          description: HTTPRouteFilter defines processing steps that must be completed during the request or response lifecycle. HTTPRouteFilters are meant as an extension point to express processing that may be done in Gateway implementations. Some examples include request or response modification, implementing authentication strategies, rate-limiting, and traffic shaping. API guarantee/conformance is defined based on the type of the filter.
                          properties:
                            extensionRef:
                              description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  For example, resource \"myroutefilter\" in group \"networking.example.net\"). ExtensionRef MUST NOT be used for core and extended filters. \n Support: Implementation-specific"
                              properties:
                                group:
                                  description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is kind of the referent. For example "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                            requestHeaderModifier:
                              description: "RequestHeaderModifier defines a schema for a filter that modifies request headers. \n Support: Core"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            requestMirror:
                              description: "RequestMirror defines a schema for a filter that mirrors requests. Requests are sent to the specified destination, but responses from that destination are ignored. \n Support: Extended"
                              properties:
                                backendRef:
                                  description: "BackendRef references a resource where mirrored requests are sent. \n If the referent cannot be found, this BackendRef is invalid and must be dropped from the Gateway. The controller must ensure the \"ResolvedRefs\" condition on the Route status is set to `status: False` and not configure this backend in the underlying implementation. \n If there is a cross-namespace reference to an *existing* object that is not allowed by a ReferenceGrant, the controller must ensure the \"ResolvedRefs\"  condition on the Route is set to `status: False`, with the \"RefNotPermitted\" reason and not configure this backend in the underlying implementation. \n In either error case, the Message of the `ResolvedRefs` Condition should be used to provide more detail about the problem. \n Support: Extended for Kubernetes Service \n Support: Implementation-specific for any other resource"
                                  properties:
                                    group:
                                      default: ""
                                      description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                    - name
                                  type: object
                              required:
                                - backendRef
                              type: object
                            requestRedirect:
                              description: "RequestRedirect defines a schema for a filter that responds to the request with an HTTP redirection. \n Support: Core"
                              properties:
                                hostname:
                                  description: "Hostname is the hostname to be used in the value of the `Location` header in the response. When empty, the hostname of the request is used. \n Support: Core"
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: "Path defines parameters used to modify the path of the incoming request. The modified path is then used to construct the `Location` header. When empty, the request path is used as-is. \n Support: Extended \n <gateway:experimental>"
                                  properties:
                                    replaceFullPath:
                                      description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                      enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                      type: string
                                  required:
                                    - type
                                  type: object
                                port:
                                  description: "Port is the port to be used in the value of the `Location` header in the response. When empty, port (if specified) of the request is used. \n Support: Extended"
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: "Scheme is the scheme to be used in the value of the `Location` header in the response. When empty, the scheme of the request is used. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Extended"
                                  enum:
                                    - http
                                    - https
                                  type: string
                                statusCode:
                                  default: 302
                                  description: "StatusCode is the HTTP status code to be used in response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n Support: Core"
                                  enum:
                                    - 301
                                    - 302
                                  type: integer
                              type: object
                            responseHeaderModifier:
                              description: "ResponseHeaderModifier defines a schema for a filter that modifies response headers. \n Support: Extended \n <gateway:experimental>"
                              properties:
                                add:
                                  description: "Add adds the given header(s) (name, value) to the request before the action. It appends to any existing values associated with the header name. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   add:   - name: \"my-header\"     value: \"bar,baz\" \n Output:   GET /foo HTTP/1.1   my-header: foo,bar,baz"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: "Remove the given header(s) from the HTTP request before the action. The value of Remove is a list of HTTP header names. Note that the header names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2). \n Input:   GET /foo HTTP/1.1   my-header1: foo   my-header2: bar   my-header3: baz \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   my-header2: bar"
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                set:
                                  description: "Set overwrites the request with the given header (name, value) before the action. \n Input:   GET /foo HTTP/1.1   my-header: foo \n Config:   set:   - name: \"my-header\"     value: \"bar\" \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                  items:
                                    description: HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent."
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              type: object
                            type:
                              description: "Type identifies the type of filter to apply. As with other API fields, types are classified into three conformance levels: \n - Core: Filter types and their corresponding configuration defined by   \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All   implementations must support core filters. \n - Extended: Filter types and their corresponding configuration defined by   \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers   are encouraged to support extended filters. \n - Implementation-specific: Filters that are defined and supported by   specific vendors.   In the future, filters showing convergence in behavior across multiple   implementations will be considered for inclusion in extended or core   conformance levels. Filter-specific configuration for such filters   is specified using the ExtensionRef field. `Type` should be set to   \"ExtensionRef\" for custom filters. \n Implementers are encouraged to define custom implementation types to extend the core API with implementation-specific behavior. \n If a reference to a custom filter type cannot be resolved, the filter MUST NOT be skipped. Instead, requests that would have been processed by that filter MUST receive a HTTP error response. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n "
                              enum:
                                - RequestHeaderModifier
                                - ResponseHeaderModifier
                                - RequestMirror
                                - RequestRedirect
                                - URLRewrite
                                - ExtensionRef
                              type: string
                            urlRewrite:
                              description: "URLRewrite defines a schema for a filter that modifies a request during forwarding. \n Support: Extended \n <gateway:experimental>"
                              properties:
                                hostname:
                                  description: "Hostname is the value to be used to replace the Host header value during forwarding. \n Support: Extended \n <gateway:experimental>"
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: "Path defines a path rewrite. \n Support: Extended \n <gateway:experimental>"
                                  properties:
                                    replaceFullPath:
                                      description: "ReplaceFullPath specifies the value with which to replace the full path of a request during a rewrite or redirect. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: "ReplacePrefixMatch specifies the value with which to replace the prefix match of a request during a rewrite or redirect. For example, a request to \"/foo/bar\" with a prefix match of \"/foo\" would be modified to \"/bar\". \n Note that this matches the behavior of the PathPrefix match type. This matches full path elements. A path element refers to the list of labels in the path split by the `/` separator. When specified, a trailing `/` is ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all match the prefix `/abc`, but the path `/abcd` would not. \n <gateway:experimental>"
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: "Type defines the type of path modifier. Additional types may be added in a future release of the API. \n Note that values may be added to this enum, implementations must ensure that unknown values will not cause a crash. \n Unknown values here must result in the implementation setting the Accepted Condition for the Route to `status: False`, with a Reason of `UnsupportedValue`. \n <gateway:experimental>"
                                      enum:
                                        - ReplaceFullPath
                                        - ReplacePrefixMatch
                                      type: string
                                  required:
                                    - type
                                  type: object
                              type: object
                          required:
                            - type
                          type: object
                        maxItems: 16
                        type: array
                      matches:
                        default:
                          - path:
                              type: PathPrefix
                              value: /
                        description: "Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. \n For example, take the following matches configuration: \n ``` matches: - path:     value: \"/foo\"   headers:   - name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\" ``` \n For a request to match against this rule, a request must satisfy EITHER of the two conditions: \n - path prefixed with `/foo` AND contains the header `version: v2` - path prefix of `/v2/foo` \n See the documentation for HTTPRouteMatch on how to specify multiple match conditions that should be ANDed together. \n If no matches are specified, the default is a prefix path match on \"/\", which has the effect of matching every HTTP request. \n Proxy or Load Balancer routing configuration generated from HTTPRoutes MUST prioritize matches based on the following criteria, continuing on ties. Across all rules specified on applicable Routes, precedence must be given to the match with the largest number of: \n * Characters in a matching path. * Header matches. * Query param matches. \n If ties still exist across multiple Routes, matching precedence MUST be determined in order of the following criteria, continuing on ties: \n * The oldest Route based on creation timestamp. * The Route appearing first in alphabetical order by   \"{namespace}/{name}\". \n If ties still exist within an HTTPRoute, matching precedence MUST be granted to the FIRST matching rule (in list order) with a match meeting the above criteria. \n When no rules matching a request have been successfully attached to the parent a request is coming from, a HTTP 404 status code MUST be returned."
                        items:
                          description: "HTTPRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. \n For example, the match below will match a HTTP request only if its path starts with `/foo` AND it contains the `version: v1` header: \n ``` match: \n \tpath: \t  value: \"/foo\" \theaders: \t- name: \"version\" \t  value \"v1\" \n ```"
                          properties:
                            headers:
                              description: Headers specifies HTTP request header matchers. Multiple match values are ANDed together, meaning, a request must match all the specified headers to select the route.
                              items:
                                description: HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request headers.
                                properties:
                                  name:
                                    description: "Name is the name of the HTTP Header to be matched. Name matching MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2). \n If multiple entries specify equivalent header names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent header name MUST be ignored. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent. \n When a header is repeated in an HTTP request, it is implementation-specific behavior as to how this is represented. Generally, proxies should follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding processing a repeated header, with special handling for \"Set-Cookie\"."
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  type:
                                    default: Exact
                                    description: "Type specifies how to match against the value of the header. \n Support: Core (Exact) \n Support: Implementation-specific (RegularExpression) \n Since RegularExpression HeaderMatchType has implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect."
                                    enum:
                                      - Exact
                                      - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP Header to be matched.
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            method:
                              description: "Method specifies HTTP method matcher. When specified, this route will be matched only if the request has the specified method. \n Support: Extended"
                              enum:
                                - GET
                                - HEAD
                                - POST
                                - PUT
                                - DELETE
                                - CONNECT
                                - OPTIONS
                                - TRACE
                                - PATCH
                              type: string
                            path:
                              default:
                                type: PathPrefix
                                value: /
                              description: Path specifies a HTTP request path matcher. If this field is not specified, a default prefix match on the "/" path is provided.
                              properties:
                                type:
                                  default: PathPrefix
                                  description: "Type specifies how to match against the path Value. \n Support: Core (Exact, PathPrefix) \n Support: Implementation-specific (RegularExpression)"
                                  enum:
                                    - Exact
                                    - PathPrefix
                                    - RegularExpression
                                  type: string
                                value:
                                  default: /
                                  description: Value of the HTTP path to match against.
                                  maxLength: 1024
                                  type: string
                              type: object
                            queryParams:
                              description: "QueryParams specifies HTTP query parameter matchers. Multiple match values are ANDed together, meaning, a request must match all the specified query parameters to select the route. \n Support: Extended"
                              items:
                                description: HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.
                                properties:
                                  name:
                                    description: "Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3). \n If multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored. \n If a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API. \n Users SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations."
                                    maxLength: 256
                                    minLength: 1
                                    type: string
                                  type:
                                    default: Exact
                                    description: "Type specifies how to match against the value of the query parameter. \n Support: Extended (Exact) \n Support: Implementation-specific (RegularExpression) \n Since RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect."
                                    enum:
                                      - Exact
                                      - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP query param to be matched.
                                    maxLength: 1024
                                    minLength: 1
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                          type: object
                        maxItems: 8
                        type: array
                    type: object
                  maxItems: 16
                  type: array
              type: object
            status:
              description: Status defines the current state of HTTPRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-ingressgateways.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: ingressgateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: IngressGateway
    listKind: IngressGatewayList
    plural: ingressgateways
    shortNames:
    - ingress-gateway
    singular: ingressgateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressGateway is the Schema for the ingressgateways API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressGatewaySpec defines the desired state of IngressGateway.
            properties:
              defaults:
                description: Defaults is default configuration for all upstream services
                properties:
                  maxConcurrentRequests:
                    description: The maximum number of concurrent requests that will
                      be allowed at a single point in time. Use this to limit HTTP/2
                      traffic, since HTTP/2 has many requests per connection.
                    format: int32
                    type: integer
                  maxConnections:
                    description: The maximum number of connections a service instance
                      will be allowed to establish against the given upstream. Use
                      this to limit HTTP/1.1 traffic, since HTTP/1.1 has a request
                      per connection.
                    format: int32
                    type: integer
                  maxPendingRequests:
                    description: The maximum number of requests that will be queued
                      while waiting for a connection to be established.
                    format: int32
                    type: integer
                type: object
              listeners:
                description: Listeners declares what ports the ingress gateway should
                  listen on, and what services to associated to those ports.
                items:
                  description: IngressListener manages the configuration for a listener
                    on a specific port.
                  properties:
                    port:
                      description: Port declares the port on which the ingress gateway
                        should listen for traffic.
                      type: integer
                    protocol:
                      description: 'Protocol declares what type of traffic this listener
                        is expected to receive. Depending on the protocol, a listener
                        might support multiplexing services over a single port, or
                        additional discovery chain features. The current supported
                        values are: (tcp | http | http2 | grpc).'
                      type: string
                    services:
                      description: Services declares the set of services to which
                        the listener forwards traffic. For "tcp" protocol listeners,
                        only a single service is allowed. For "http" listeners, multiple
                        services can be declared.
                      items:
                        description: IngressService manages configuration for services
                          that are exposed to ingress traffic.
                        properties:
                          hosts:
                            description: "Hosts is a list of hostnames which should
                              be associated to this service on the defined listener.
                              Only allowed on layer 7 protocols, this will be used
                              to route traffic to the service by matching the Host
                              header of the HTTP request. \n If a host is provided
                              for a service that also has a wildcard specifier defined,
                              the host will override the wildcard-specifier-provided
                              \"<service-name>.*\" domain for that listener. \n This
                              cannot be specified when using the wildcard specifier,
                              \"*\", or when using a \"tcp\" listener."
                            items:
                              type: string
                            type: array
                          maxConcurrentRequests:
                            description: The maximum number of concurrent requests
                              that will be allowed at a single point in time. Use
                              this to limit HTTP/2 traffic, since HTTP/2 has many
                              requests per connection.
                            format: int32
                            type: integer
                          maxConnections:
                            description: The maximum number of connections a service
                              instance will be allowed to establish against the given
                              upstream. Use this to limit HTTP/1.1 traffic, since
                              HTTP/1.1 has a request per connection.
                            format: int32
                            type: integer
                          maxPendingRequests:
                            description: The maximum number of requests that will
                              be queued while waiting for a connection to be established.
                            format: int32
                            type: integer
                          name:
                            description: "Name declares the service to which traffic
                              should be forwarded. \n This can either be a specific
                              service, or the wildcard specifier, \"*\". If the wildcard
                              specifier is provided, the listener must be of \"http\"
                              protocol and means that the listener will forward traffic
                              to all services. \n A name can be specified on multiple
                              listeners, and will be exposed on both of the listeners."
                            type: string
                          namespace:
                            description: Namespace is the namespace where the service
                              is located. Namespacing is a Consul Enterprise feature.
                            type: string
                          partition:
                            description: Partition is the admin-partition where the
                              service is located. Partitioning is a Consul Enterprise
                              feature.
                            type: string
                          requestHeaders:
                            description: Allow HTTP header manipulation to be configured.
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Add is a set of name -> value pairs that
                                  should be appended to the request or response (i.e.
                                  allowing duplicates if the same header already exists).
                                type: object
                              remove:
                                description: Remove is the set of header names that
                                  should be stripped from the request or response.
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Set is a set of name -> value pairs that
                                  should be added to the request or response, overwriting
                                  any existing header values of the same name.
                                type: object
                            type: object
                          responseHeaders:
                            description: HTTPHeaderModifiers is a set of rules for
                              HTTP header modification that should be performed by
                              proxies as the request passes through them. It can operate
                              on either request or response headers depending on the
                              context in which it is used.
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Add is a set of name -> value pairs that
                                  should be appended to the request or response (i.e.
                                  allowing duplicates if the same header already exists).
                                type: object
                              remove:
                                description: Remove is the set of header names that
                                  should be stripped from the request or response.
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Set is a set of name -> value pairs that
                                  should be added to the request or response, overwriting
                                  any existing header values of the same name.
                                type: object
                            type: object
                          tls:
                            description: TLS allows specifying some TLS configuration
                              per listener.
                            properties:
                              sds:
                                description: SDS allows configuring TLS certificate
                                  from an SDS service.
                                properties:
                                  certResource:
                                    description: CertResource is the SDS resource
                                      name to request when fetching the certificate
                                      from the SDS service.
                                    type: string
                                  clusterName:
                                    description: ClusterName is the SDS cluster name
                                      to connect to, to retrieve certificates. This
                                      cluster must be specified in the Gateway's bootstrap
                                      configuration.
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    tls:
                      description: TLS config for this listener.
                      properties:
                        cipherSuites:
                          description: Define a subset of cipher suites to restrict
                            Only applicable to connections negotiated via TLS 1.2
                            or earlier.
                          items:
                            type: string
                          type: array
                        enabled:
                          description: Indicates that TLS should be enabled for this
                            gateway service.
                          type: boolean
                        sds:
                          description: SDS allows configuring TLS certificate from
                            an SDS service.
                          properties:
                            certResource:
                              description: CertResource is the SDS resource name to
                                request when fetching the certificate from the SDS
                                service.
                              type: string
                            clusterName:
                              description: ClusterName is the SDS cluster name to
                                connect to, to retrieve certificates. This cluster
                                must be specified in the Gateway's bootstrap configuration.
                              type: string
                          type: object
                        tlsMaxVersion:
                          description: TLSMaxVersion sets the default maximum TLS
                            version supported. Must be greater than or equal to `TLSMinVersion`.
                            One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or
                            `TLSv1_3`. If unspecified, Envoy will default to TLS 1.3
                            as a max version for incoming connections.
                          type: string
                        tlsMinVersion:
                          description: TLSMinVersion sets the default minimum TLS
                            version supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`,
                            `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy v1.22.0
                            and newer will default to TLS 1.2 as a min version, while
                            older releases of Envoy default to TLS 1.0.
                          type: string
                      required:
                      - enabled
                      type: object
                  type: object
                type: array
              tls:
                description: TLS holds the TLS configuration for this gateway.
                properties:
                  cipherSuites:
                    description: Define a subset of cipher suites to restrict Only
                      applicable to connections negotiated via TLS 1.2 or earlier.
                    items:
                      type: string
                    type: array
                  enabled:
                    description: Indicates that TLS should be enabled for this gateway
                      service.
                    type: boolean
                  sds:
                    description: SDS allows configuring TLS certificate from an SDS
                      service.
                    properties:
                      certResource:
                        description: CertResource is the SDS resource name to request
                          when fetching the certificate from the SDS service.
                        type: string
                      clusterName:
                        description: ClusterName is the SDS cluster name to connect
                          to, to retrieve certificates. This cluster must be specified
                          in the Gateway's bootstrap configuration.
                        type: string
                    type: object
                  tlsMaxVersion:
                    description: TLSMaxVersion sets the default maximum TLS version
                      supported. Must be greater than or equal to `TLSMinVersion`.
                      One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                      If unspecified, Envoy will default to TLS 1.3 as a max version
                      for incoming connections.
                    type: string
                  tlsMinVersion:
                    description: TLSMinVersion sets the default minimum TLS version
                      supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                      or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will default
                      to TLS 1.2 as a min version, while older releases of Envoy default
                      to TLS 1.0.
                    type: string
                required:
                - enabled
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-jwtproviders.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: jwtproviders.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: JWTProvider
    listKind: JWTProviderList
    plural: jwtproviders
    singular: jwtprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: JWTProvider is the Schema for the jwtproviders API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JWTProviderSpec defines the desired state of JWTProvider
            properties:
              audiences:
                description: Audiences is the set of audiences the JWT is allowed
                  to access. If specified, all JWTs verified with this provider must
                  address at least one of these to be considered valid.
                items:
                  type: string
                type: array
              cacheConfig:
                description: CacheConfig defines configuration for caching the validation
                  result for previously seen JWTs. Caching results can speed up verification
                  when individual tokens are expected to be handled multiple times.
                properties:
                  size:
                    description: "Size specifies the maximum number of JWT verification
                      results to cache. \n Defaults to 0, meaning that JWT caching
                      is disabled."
                    type: integer
                type: object
              clockSkewSeconds:
                description: "ClockSkewSeconds specifies the maximum allowable time
                  difference from clock skew when validating the \"exp\" (Expiration)
                  and \"nbf\" (Not Before) claims. \n Default value is 30 seconds."
                type: integer
              forwarding:
                description: Forwarding defines rules for forwarding verified JWTs
                  to the backend.
                properties:
                  headerName:
                    description: "HeaderName is a header name to use when forwarding
                      a verified JWT to the backend. The verified JWT could have been
                      extracted from any location (query param, header, or cookie).
                      \n The header value will be base64-URL-encoded, and will not
                      be padded unless PadForwardPayloadHeader is true."
                    type: string
                  padForwardPayloadHeader:
                    description: "PadForwardPayloadHeader determines whether padding
                      should be added to the base64 encoded token forwarded with ForwardPayloadHeader.
                      \n Default value is false."
                    type: boolean
                type: object
              issuer:
                description: Issuer is the entity that must have issued the JWT. This
                  value must match the "iss" claim of the token.
                type: string
              jsonWebKeySet:
                description: JSONWebKeySet defines a JSON Web Key Set, its location
                  on disk, or the means with which to fetch a key set from a remote
                  server.
                properties:
                  local:
                    description: Local specifies a local source for the key set.
                    properties:
                      filename:
                        description: Filename configures a location on disk where
                          the JWKS can be found. If specified, the file must be present
                          on the disk of ALL proxies with intentions referencing this
                          provider.
                        type: string
                      jwks:
                        description: JWKS contains a base64 encoded JWKS.
                        type: string
                    type: object
                  remote:
                    description: Remote specifies how to fetch a key set from a remote
                      server.
                    properties:
                      cacheDuration:
                        description: "CacheDuration is the duration after which cached
                          keys should be expired. \n Default value is 5 minutes."
                        format: int64
                        type: integer
                      fetchAsynchronously:
                        description: "FetchAsynchronously indicates that the JWKS
                          should be fetched when a client request arrives. Client
                          requests will be paused until the JWKS is fetched. If false,
                          the proxy listener will wait for the JWKS to be fetched
                          before being activated. \n Default value is false."
                        type: boolean
                      requestTimeoutMs:
                        description: RequestTimeoutMs is the number of milliseconds
                          to time out when making a request for the JWKS.
                        type: integer
                      retryPolicy:
                        description: "RetryPolicy defines a retry policy for fetching
                          JWKS. \n There is no retry by default."
                        properties:
                          numRetries:
                            description: "NumRetries is the number of times to retry
                              fetching the JWKS. The retry strategy uses jittered
                              exponential backoff with a base interval of 1s and max
                              of 10s. \n Default value is 0."
                            type: integer
                          retryPolicyBackOff:
                            description: "Backoff policy \n Defaults to Envoy's backoff
                              policy"
                            properties:
                              baseInterval:
                                description: "BaseInterval to be used for the next
                                  back off computation \n The default value from envoy
                                  is 1s"
                                format: int64
                                type: integer
                              maxInterval:
                                description: "MaxInternal to be used to specify the
                                  maximum interval between retries. Optional but should
                                  be greater or equal to BaseInterval. \n Defaults
                                  to 10 times BaseInterval"
                                format: int64
                                type: integer
                            type: object
                        type: object
                      uri:
                        description: URI is the URI of the server to query for the
                          JWKS.
                        type: string
                    type: object
                type: object
              locations:
                description: 'Locations where the JWT will be present in requests.
                  Envoy will check all of these locations to extract a JWT. If no
                  locations are specified Envoy will default to: 1. Authorization
                  header with Bearer schema: "Authorization: Bearer <token>" 2. accessToken
                  query parameter.'
                items:
                  description: "JWTLocation is a location where the JWT could be present
                    in requests. \n Only one of Header, QueryParam, or Cookie can
                    be specified."
                  properties:
                    cookie:
                      description: Cookie defines how to extract a JWT from an HTTP
                        request cookie.
                      properties:
                        name:
                          description: Name is the name of the cookie containing the
                            token.
                          type: string
                      type: object
                    header:
                      description: Header defines how to extract a JWT from an HTTP
                        request header.
                      properties:
                        forward:
                          description: "Forward defines whether the header with the
                            JWT should be forwarded after the token has been verified.
                            If false, the header will not be forwarded to the backend.
                            \n Default value is false."
                          type: boolean
                        name:
                          description: Name is the name of the header containing the
                            token.
                          type: string
                        valuePrefix:
                          description: 'ValuePrefix is an optional prefix that precedes
                            the token in the header value. For example, "Bearer "
                            is a standard value prefix for a header named "Authorization",
                            but the prefix is not part of the token itself: "Authorization:
                            Bearer <token>"'
                          type: string
                      type: object
                    queryParam:
                      description: QueryParam defines how to extract a JWT from an
                        HTTP request query parameter.
                      properties:
                        name:
                          description: Name is the name of the query param containing
                            the token.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-meshes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshes.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Mesh is the Schema for the mesh API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeshSpec defines the desired state of Mesh.
            properties:
              allowEnablingPermissiveMutualTLS:
                description: AllowEnablingPermissiveMutualTLS must be true in order
                  to allow setting MutualTLSMode=permissive in either service-defaults
                  or proxy-defaults.
                type: boolean
              http:
                description: HTTP defines the HTTP configuration for the service mesh.
                properties:
                  sanitizeXForwardedClientCert:
                    type: boolean
                required:
                - sanitizeXForwardedClientCert
                type: object
              peering:
                description: Peering defines the peering configuration for the service
                  mesh.
                properties:
                  peerThroughMeshGateways:
                    description: PeerThroughMeshGateways determines whether peering
                      traffic between control planes should flow through mesh gateways.
                      If enabled, Consul servers will advertise mesh gateway addresses
                      as their own. Additionally, mesh gateways will configure themselves
                      to expose the local servers using a peering-specific SNI.
                    type: boolean
                type: object
              tls:
                description: TLS defines the TLS configuration for the service mesh.
                properties:
                  incoming:
                    description: Incoming defines the TLS configuration for inbound
                      mTLS connections targeting the public listener on Connect and
                      TerminatingGateway proxy kinds.
                    properties:
                      cipherSuites:
                        description: CipherSuites sets the default list of TLS cipher
                          suites to support when negotiating connections using TLS
                          1.2 or earlier. If unspecified, Envoy will use a default
                          server cipher list. The list of supported cipher suites
                          can be seen in https://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169
                          and is dependent on underlying support in Envoy. Future
                          releases of Envoy may remove currently-supported but insecure
                          cipher suites, and future releases of Consul may add new
                          supported cipher suites if any are added to Envoy.
                        items:
                          type: string
                        type: array
                      tlsMaxVersion:
                        description: TLSMaxVersion sets the default maximum TLS version
                          supported. Must be greater than or equal to `TLSMinVersion`.
                          One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                          If unspecified, Envoy will default to TLS 1.3 as a max version
                          for incoming connections.
                        type: string
                      tlsMinVersion:
                        description: TLSMinVersion sets the default minimum TLS version
                          supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                          or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will
                          default to TLS 1.2 as a min version, while older releases
                          of Envoy default to TLS 1.0.
                        type: string
                    type: object
                  outgoing:
                    description: Outgoing defines the TLS configuration for outbound
                      mTLS connections dialing upstreams from Connect and IngressGateway
                      proxy kinds.
                    properties:
                      cipherSuites:
                        description: CipherSuites sets the default list of TLS cipher
                          suites to support when negotiating connections using TLS
                          1.2 or earlier. If unspecified, Envoy will use a default
                          server cipher list. The list of supported cipher suites
                          can be seen in https://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169
                          and is dependent on underlying support in Envoy. Future
                          releases of Envoy may remove currently-supported but insecure
                          cipher suites, and future releases of Consul may add new
                          supported cipher suites if any are added to Envoy.
                        items:
                          type: string
                        type: array
                      tlsMaxVersion:
                        description: TLSMaxVersion sets the default maximum TLS version
                          supported. Must be greater than or equal to `TLSMinVersion`.
                          One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                          If unspecified, Envoy will default to TLS 1.3 as a max version
                          for incoming connections.
                        type: string
                      tlsMinVersion:
                        description: TLSMinVersion sets the default minimum TLS version
                          supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                          or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will
                          default to TLS 1.2 as a min version, while older releases
                          of Envoy default to TLS 1.0.
                        type: string
                    type: object
                type: object
              transparentProxy:
                description: TransparentProxy controls the configuration specific
                  to proxies in "transparent" mode. Added in v1.10.0.
                properties:
                  meshDestinationsOnly:
                    description: MeshDestinationsOnly determines whether sidecar proxies
                      operating in "transparent" mode can proxy traffic to IP addresses
                      not registered in Consul's catalog. If enabled, traffic will
                      only be proxied to upstreams with service registrations in the
                      catalog.
                    type: boolean
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-meshservices.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshservices.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: MeshService
    listKind: MeshServiceList
    plural: meshservices
    singular: meshservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MeshService holds a reference to an externally managed Consul
          Service Mesh service.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of MeshService.
            properties:
              name:
                description: Name holds the service name for a Consul service.
                type: string
              peer:
                description: Peer optionally specifies the name of the peer exporting
                  the Consul service. If not specified, the Consul service is assumed
                  to be in the local datacenter.
                type: string
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-proxydefaults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: proxydefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ProxyDefaults
    listKind: ProxyDefaultsList
    plural: proxydefaults
    shortNames:
    - proxy-defaults
    singular: proxydefaults
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProxyDefaults is the Schema for the proxydefaults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProxyDefaultsSpec defines the desired state of ProxyDefaults.
            properties:
              accessLogs:
                description: AccessLogs controls all envoy instances' access logging
                  configuration.
                properties:
                  disableListenerLogs:
                    description: DisableListenerLogs turns off just listener logs
                      for connections rejected by Envoy because they don't have a
                      matching listener filter.
                    type: boolean
                  enabled:
                    description: Enabled turns on all access logging
                    type: boolean
                  jsonFormat:
                    description: 'JSONFormat is a JSON-formatted string of an Envoy
                      access log format dictionary. See for more info on formatting:
                      https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#format-dictionaries
                      Defining JSONFormat and TextFormat is invalid.'
                    type: string
                  path:
                    description: Path is the output file to write logs for file-type
                      logging
                    type: string
                  textFormat:
                    description: 'TextFormat is a representation of Envoy access logs
                      format. See for more info on formatting: https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#format-strings
                      Defining JSONFormat and TextFormat is invalid.'
                    type: string
                  type:
                    description: Type selects the output for logs one of "file", "stderr".
                      "stdout"
                    type: string
                type: object
              config:
                description: Config is an arbitrary map of configuration values used
                  by Connect proxies. Any values that your proxy allows can be configured
                  globally here. Supports JSON config values. See https://www.consul.io/docs/connect/proxies/envoy#configuration-formatting
                type: object
                x-kubernetes-preserve-unknown-fields: true
              envoyExtensions:
                description: EnvoyExtensions are a list of extensions to modify Envoy
                  proxy configuration.
                items:
                  description: EnvoyExtension has configuration for an extension that
                    patches Envoy resources.
                  properties:
                    arguments:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      type: string
                    required:
                      type: boolean
                  type: object
                type: array
              expose:
                description: Expose controls the default expose path configuration
                  for Envoy.
                properties:
                  checks:
                    description: Checks defines whether paths associated with Consul
                      checks will be exposed. This flag triggers exposing all HTTP
                      and GRPC check paths registered for the service.
                    type: boolean
                  paths:
                    description: Paths is the list of paths exposed through the proxy.
                    items:
                      properties:
                        listenerPort:
                          description: ListenerPort defines the port of the proxy's
                            listener for exposed paths.
                          type: integer
                        localPathPort:
                          description: LocalPathPort is the port that the service
                            is listening on for the given path.
                          type: integer
                        path:
                          description: Path is the path to expose through the proxy,
                            ie. "/metrics".
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "http" and "http2", defaults to "http".
                          type: string
                      type: object
                    type: array
                type: object
              failoverPolicy:
                description: FailoverPolicy specifies the exact mechanism used for
                  failover.
                properties:
                  mode:
                    description: Mode specifies the type of failover that will be
                      performed. Valid values are "sequential", "" (equivalent to
                      "sequential") and "order-by-locality".
                    type: string
                  regions:
                    description: Regions is the ordered list of the regions of the
                      failover targets. Valid values can be "us-west-1", "us-west-2",
                      and so on.
                    items:
                      type: string
                    type: array
                type: object
              meshGateway:
                description: MeshGateway controls the default mesh gateway configuration
                  for this service.
                properties:
                  mode:
                    description: Mode is the mode that should be used for the upstream
                      connection. One of none, local, or remote.
                    type: string
                type: object
              mode:
                description: 'Mode can be one of "direct" or "transparent". "transparent"
                  represents that inbound and outbound application traffic is being
                  captured and redirected through the proxy. This mode does not enable
                  the traffic redirection itself. Instead it signals Consul to configure
                  Envoy as if traffic is already being redirected. "direct" represents
                  that the proxy''s listeners must be dialed directly by the local
                  application and other proxies. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                type: string
              mutualTLSMode:
                description: 'MutualTLSMode controls whether mutual TLS is required
                  for all incoming connections when transparent proxy is enabled.
                  This can be set to "permissive" or "strict". "strict" is the default
                  which requires mutual TLS for incoming connections. In the insecure
                  "permissive" mode, connections to the sidecar proxy public listener
                  port require mutual TLS, but connections to the service port do
                  not require mutual TLS and are proxied to the application unmodified.
                  Note: Intentions are not enforced for non-mTLS connections. To keep
                  your services secure, we recommend using "strict" mode whenever
                  possible and enabling "permissive" mode only when necessary.'
                type: string
              transparentProxy:
                description: 'TransparentProxy controls configuration specific to
                  proxies in transparent mode. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                properties:
                  dialedDirectly:
                    description: DialedDirectly indicates whether transparent proxies
                      can dial this proxy instance directly. The discovery chain is
                      not considered when dialing a service instance directly. This
                      setting is useful when addressing stateful services, such as
                      a database cluster with a leader node.
                    type: boolean
                  outboundListenerPort:
                    description: OutboundListenerPort is the port of the listener
                      where outbound application traffic is being redirected to.
                    type: integer
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-referencegrants.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: referencegrants.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: ReferenceGrant
    listKind: ReferenceGrantList
    plural: referencegrants
    shortNames:
      - refgrant
    singular: referencegrant
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "ReferenceGrant identifies kinds of resources in other namespaces that are trusted to reference the specified kinds of resources in the same namespace as the policy. \n Each ReferenceGrant can be used to represent a unique trust relationship. Additional Reference Grants can be used to add to the set of trusted sources of inbound references for the namespace they are defined within. \n All cross-namespace references in Gateway API (with the exception of cross-namespace Gateway-route attachment) require a ReferenceGrant. \n ReferenceGrant is a form of runtime verification allowing users to assert which cross-namespace object references are permitted. Implementations that support ReferenceGrant MUST NOT permit cross-namespace references which have no grant, and MUST respond to the removal of a grant by revoking the access that the grant allowed. \n Support: Core"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of ReferenceGrant.
              properties:
                from:
                  description: "From describes the trusted namespaces and kinds that can reference the resources described in \"To\". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. \n Support: Core"
                  items:
                    description: ReferenceGrantFrom describes trusted namespaces and kinds.
                    properties:
                      group:
                        description: "Group is the group of the referent. When empty, the Kubernetes core API group is inferred. \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: "Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the \"Core\" support level for this field. \n When used to permit a SecretObjectReference: \n * Gateway \n When used to permit a BackendObjectReference: \n * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                      - group
                      - kind
                      - namespace
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
                to:
                  description: "To describes the resources that may be referenced by the resources described in \"From\". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. \n Support: Core"
                  items:
                    description: ReferenceGrantTo describes what Kinds are allowed as targets of the references.
                    properties:
                      group:
                        description: "Group is the group of the referent. When empty, the Kubernetes core API group is inferred. \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: "Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the \"Core\" support level for this field: \n * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
              required:
                - from
                - to
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: "ReferenceGrant identifies kinds of resources in other namespaces that are trusted to reference the specified kinds of resources in the same namespace as the policy. \n Each ReferenceGrant can be used to represent a unique trust relationship. Additional Reference Grants can be used to add to the set of trusted sources of inbound references for the namespace they are defined within. \n All cross-namespace references in Gateway API (with the exception of cross-namespace Gateway-route attachment) require a ReferenceGrant. \n ReferenceGrant is a form of runtime verification allowing users to assert which cross-namespace object references are permitted. Implementations that support ReferenceGrant MUST NOT permit cross-namespace references which have no grant, and MUST respond to the removal of a grant by revoking the access that the grant allowed. \n Support: Core"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of ReferenceGrant.
              properties:
                from:
                  description: "From describes the trusted namespaces and kinds that can reference the resources described in \"To\". Each entry in this list MUST be considered to be an additional place that references can be valid from, or to put this another way, entries MUST be combined using OR. \n Support: Core"
                  items:
                    description: ReferenceGrantFrom describes trusted namespaces and kinds.
                    properties:
                      group:
                        description: "Group is the group of the referent. When empty, the Kubernetes core API group is inferred. \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: "Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the \"Core\" support level for this field. \n When used to permit a SecretObjectReference: \n * Gateway \n When used to permit a BackendObjectReference: \n * GRPCRoute * HTTPRoute * TCPRoute * TLSRoute * UDPRoute"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                      - group
                      - kind
                      - namespace
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
                to:
                  description: "To describes the resources that may be referenced by the resources described in \"From\". Each entry in this list MUST be considered to be an additional place that references can be valid to, or to put this another way, entries MUST be combined using OR. \n Support: Core"
                  items:
                    description: ReferenceGrantTo describes what Kinds are allowed as targets of the references.
                    properties:
                      group:
                        description: "Group is the group of the referent. When empty, the Kubernetes core API group is inferred. \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: "Kind is the kind of the referent. Although implementations may support additional resources, the following types are part of the \"Core\" support level for this field: \n * Secret when used to permit a SecretObjectReference * Service when used to permit a BackendObjectReference"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent. When unspecified, this policy refers to all resources of the specified Group and Kind in the local namespace.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
              required:
                - from
                - to
              type: object
          type: object
      served: true
      storage: false
      subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-samenessgroups.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: samenessgroups.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: SamenessGroup
    listKind: SamenessGroupList
    plural: samenessgroups
    shortNames:
    - sameness-group
    singular: samenessgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SamenessGroup is the Schema for the samenessgroups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SamenessGroupSpec defines the desired state of SamenessGroup.
            properties:
              defaultForFailover:
                description: DefaultForFailover indicates that upstream requests to
                  members of the given sameness group will implicitly failover between
                  members of this sameness group. When DefaultForFailover is true,
                  the local partition must be a member of the sameness group or IncludeLocal
                  must be set to true.
                type: boolean
              includeLocal:
                description: IncludeLocal is used to include the local partition as
                  the first member of the sameness group. The local partition can
                  only be a member of a single sameness group.
                type: boolean
              members:
                description: Members are the partitions and peers that are part of
                  the sameness group. If a member of a sameness group does not exist,
                  it will be ignored.
                items:
                  properties:
                    partition:
                      description: The partitions and peers that are part of the sameness
                        group. A sameness group member cannot define both peer and
                        partition at the same time.
                      type: string
                    peer:
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicedefaults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicedefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceDefaults
    listKind: ServiceDefaultsList
    plural: servicedefaults
    shortNames:
    - service-defaults
    singular: servicedefaults
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceDefaults is the Schema for the servicedefaults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceDefaultsSpec defines the desired state of ServiceDefaults.
            properties:
              balanceInboundConnections:
                description: BalanceInboundConnections sets the strategy for allocating
                  inbound connections to the service across proxy threads. The only
                  supported value is exact_balance. By default, no connection balancing
                  is used. Refer to the Envoy Connection Balance config for details.
                type: string
              destination:
                description: Destination is an address(es)/port combination that represents
                  an endpoint outside the mesh. This is only valid when the mesh is
                  configured in "transparent" mode. Destinations live outside of Consul's
                  catalog, and because of this, they do not require an artificial
                  node to be created.
                properties:
                  addresses:
                    description: Addresses is a list of IPs and/or hostnames that
                      can be dialed and routed through a terminating gateway.
                    items:
                      type: string
                    type: array
                  port:
                    description: Port is the port that can be dialed on any of the
                      addresses in this Destination.
                    format: int32
                    type: integer
                type: object
              envoyExtensions:
                description: EnvoyExtensions are a list of extensions to modify Envoy
                  proxy configuration.
                items:
                  description: EnvoyExtension has configuration for an extension that
                    patches Envoy resources.
                  properties:
                    arguments:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      type: string
                    required:
                      type: boolean
                  type: object
                type: array
              expose:
                description: Expose controls the default expose path configuration
                  for Envoy.
                properties:
                  checks:
                    description: Checks defines whether paths associated with Consul
                      checks will be exposed. This flag triggers exposing all HTTP
                      and GRPC check paths registered for the service.
                    type: boolean
                  paths:
                    description: Paths is the list of paths exposed through the proxy.
                    items:
                      properties:
                        listenerPort:
                          description: ListenerPort defines the port of the proxy's
                            listener for exposed paths.
                          type: integer
                        localPathPort:
                          description: LocalPathPort is the port that the service
                            is listening on for the given path.
                          type: integer
                        path:
                          description: Path is the path to expose through the proxy,
                            ie. "/metrics".
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "http" and "http2", defaults to "http".
                          type: string
                      type: object
                    type: array
                type: object
              externalSNI:
                description: ExternalSNI is an optional setting that allows for the
                  TLS SNI value to be changed to a non-connect value when federating
                  with an external system.
                type: string
              localConnectTimeoutMs:
                description: LocalConnectTimeoutMs is the number of milliseconds allowed
                  to make connections to the local application instance before timing
                  out. Defaults to 5000.
                type: integer
              localRequestTimeoutMs:
                description: LocalRequestTimeoutMs is the timeout for HTTP requests
                  to the local application instance in milliseconds. Applies to HTTP-based
                  protocols only. If not specified, inherits the Envoy default for
                  route timeouts (15s).
                type: integer
              maxInboundConnections:
                description: MaxInboundConnections is the maximum number of concurrent
                  inbound connections to each service instance. Defaults to 0 (using
                  consul's default) if not set.
                type: integer
              meshGateway:
                description: MeshGateway controls the default mesh gateway configuration
                  for this service.
                properties:
                  mode:
                    description: Mode is the mode that should be used for the upstream
                      connection. One of none, local, or remote.
                    type: string
                type: object
              mode:
                description: 'Mode can be one of "direct" or "transparent". "transparent"
                  represents that inbound and outbound application traffic is being
                  captured and redirected through the proxy. This mode does not enable
                  the traffic redirection itself. Instead it signals Consul to configure
                  Envoy as if traffic is already being redirected. "direct" represents
                  that the proxy''s listeners must be dialed directly by the local
                  application and other proxies. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                type: string
              mutualTLSMode:
                description: 'MutualTLSMode controls whether mutual TLS is required
                  for all incoming connections when transparent proxy is enabled.
                  This can be set to "permissive" or "strict". "strict" is the default
                  which requires mutual TLS for incoming connections. In the insecure
                  "permissive" mode, connections to the sidecar proxy public listener
                  port require mutual TLS, but connections to the service port do
                  not require mutual TLS and are proxied to the application unmodified.
                  Note: Intentions are not enforced for non-mTLS connections. To keep
                  your services secure, we recommend using "strict" mode whenever
                  possible and enabling "permissive" mode only when necessary.'
                type: string
              protocol:
                description: Protocol sets the protocol of the service. This is used
                  by Connect proxies for things like observability features and to
                  unlock usage of the service-splitter and service-router config entries
                  for a service.
                type: string
              transparentProxy:
                description: 'TransparentProxy controls configuration specific to
                  proxies in transparent mode. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                properties:
                  dialedDirectly:
                    description: DialedDirectly indicates whether transparent proxies
                      can dial this proxy instance directly. The discovery chain is
                      not considered when dialing a service instance directly. This
                      setting is useful when addressing stateful services, such as
                      a database cluster with a leader node.
                    type: boolean
                  outboundListenerPort:
                    description: OutboundListenerPort is the port of the listener
                      where outbound application traffic is being redirected to.
                    type: integer
                type: object
              upstreamConfig:
                description: UpstreamConfig controls default configuration settings
                  that apply across all upstreams, and per-upstream configuration
                  overrides. Note that per-upstream configuration applies across all
                  federated datacenters to the pairing of source and upstream destination
                  services.
                properties:
                  defaults:
                    description: Defaults contains default configuration for all upstreams
                      of a given service. The name field must be empty.
                    properties:
                      connectTimeoutMs:
                        description: ConnectTimeoutMs is the number of milliseconds
                          to timeout making a new connection to this upstream. Defaults
                          to 5000 (5 seconds) if not set.
                        type: integer
                      envoyClusterJSON:
                        description: 'EnvoyClusterJSON is a complete override ("escape
                          hatch") for the upstream''s cluster. The Connect client
                          TLS certificate and context will be injected overriding
                          any TLS settings present. Note: This escape hatch is NOT
                          compatible with the discovery chain and will be ignored
                          if a discovery chain is active.'
                        type: string
                      envoyListenerJSON:
                        description: 'EnvoyListenerJSON is a complete override ("escape
                          hatch") for the upstream''s listener. Note: This escape
                          hatch is NOT compatible with the discovery chain and will
                          be ignored if a discovery chain is active.'
                        type: string
                      limits:
                        description: Limits are the set of limits that are applied
                          to the proxy for a specific upstream of a service instance.
                        properties:
                          maxConcurrentRequests:
                            description: MaxConcurrentRequests is the maximum number
                              of in-flight requests that will be allowed to the upstream
                              cluster at a point in time. This is mostly applicable
                              to HTTP/2 clusters since all HTTP/1.1 requests are limited
                              by MaxConnections.
                            type: integer
                          maxConnections:
                            description: MaxConnections is the maximum number of connections
                              the local proxy can make to the upstream service.
                            type: integer
                          maxPendingRequests:
                            description: MaxPendingRequests is the maximum number
                              of requests that will be queued waiting for an available
                              connection. This is mostly applicable to HTTP/1.1 clusters
                              since all HTTP/2 requests are streamed over a single
                              connection.
                            type: integer
                        type: object
                      meshGateway:
                        description: MeshGatewayConfig controls how Mesh Gateways
                          are configured and used.
                        properties:
                          mode:
                            description: Mode is the mode that should be used for
                              the upstream connection. One of none, local, or remote.
                            type: string
                        type: object
                      name:
                        description: Name is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      namespace:
                        description: Namespace is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      partition:
                        description: Partition is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      passiveHealthCheck:
                        description: PassiveHealthCheck configuration determines how
                          upstream proxy instances will be monitored for removal from
                          the load balancing pool.
                        properties:
                          baseEjectionTime:
                            description: The base time that a host is ejected for.
                              The real time is equal to the base time multiplied by
                              the number of times the host has been ejected and is
                              capped by max_ejection_time (Default 300s). Defaults
                              to 30000ms or 30s.
                            type: string
                          enforcingConsecutive5xx:
                            description: EnforcingConsecutive5xx is the % chance that
                              a host will be actually ejected when an outlier status
                              is detected through consecutive 5xx. This setting can
                              be used to disable ejection or to ramp it up slowly.
                            format: int32
                            type: integer
                          interval:
                            description: Interval between health check analysis sweeps.
                              Each sweep may remove hosts or return hosts to the pool.
                            type: string
                          maxEjectionPercent:
                            description: The maximum % of an upstream cluster that
                              can be ejected due to outlier detection. Defaults to
                              10% but will eject at least one host regardless of the
                              value.
                            format: int32
                            type: integer
                          maxFailures:
                            description: MaxFailures is the count of consecutive failures
                              that results in a host being removed from the pool.
                            format: int32
                            type: integer
                        type: object
                      peer:
                        description: Peer is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      protocol:
                        description: Protocol describes the upstream's service protocol.
                          Valid values are "tcp", "http" and "grpc". Anything else
                          is treated as tcp. This enables protocol aware features
                          like per-request metrics and connection pooling, tracing,
                          routing etc.
                        type: string
                    type: object
                  overrides:
                    description: Overrides is a slice of per-service configuration.
                      The name field is required.
                    items:
                      properties:
                        connectTimeoutMs:
                          description: ConnectTimeoutMs is the number of milliseconds
                            to timeout making a new connection to this upstream. Defaults
                            to 5000 (5 seconds) if not set.
                          type: integer
                        envoyClusterJSON:
                          description: 'EnvoyClusterJSON is a complete override ("escape
                            hatch") for the upstream''s cluster. The Connect client
                            TLS certificate and context will be injected overriding
                            any TLS settings present. Note: This escape hatch is NOT
                            compatible with the discovery chain and will be ignored
                            if a discovery chain is active.'
                          type: string
                        envoyListenerJSON:
                          description: 'EnvoyListenerJSON is a complete override ("escape
                            hatch") for the upstream''s listener. Note: This escape
                            hatch is NOT compatible with the discovery chain and will
                            be ignored if a discovery chain is active.'
                          type: string
                        limits:
                          description: Limits are the set of limits that are applied
                            to the proxy for a specific upstream of a service instance.
                          properties:
                            maxConcurrentRequests:
                              description: MaxConcurrentRequests is the maximum number
                                of in-flight requests that will be allowed to the
                                upstream cluster at a point in time. This is mostly
                                applicable to HTTP/2 clusters since all HTTP/1.1 requests
                                are limited by MaxConnections.
                              type: integer
                            maxConnections:
                              description: MaxConnections is the maximum number of
                                connections the local proxy can make to the upstream
                                service.
                              type: integer
                            maxPendingRequests:
                              description: MaxPendingRequests is the maximum number
                                of requests that will be queued waiting for an available
                                connection. This is mostly applicable to HTTP/1.1
                                clusters since all HTTP/2 requests are streamed over
                                a single connection.
                              type: integer
                          type: object
                        meshGateway:
                          description: MeshGatewayConfig controls how Mesh Gateways
                            are configured and used.
                          properties:
                            mode:
                              description: Mode is the mode that should be used for
                                the upstream connection. One of none, local, or remote.
                              type: string
                          type: object
                        name:
                          description: Name is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        namespace:
                          description: Namespace is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        partition:
                          description: Partition is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        passiveHealthCheck:
                          description: PassiveHealthCheck configuration determines
                            how upstream proxy instances will be monitored for removal
                            from the load balancing pool.
                          properties:
                            baseEjectionTime:
                              description: The base time that a host is ejected for.
                                The real time is equal to the base time multiplied
                                by the number of times the host has been ejected and
                                is capped by max_ejection_time (Default 300s). Defaults
                                to 30000ms or 30s.
                              type: string
                            enforcingConsecutive5xx:
                              description: EnforcingConsecutive5xx is the % chance
                                that a host will be actually ejected when an outlier
                                status is detected through consecutive 5xx. This setting
                                can be used to disable ejection or to ramp it up slowly.
                              format: int32
                              type: integer
                            interval:
                              description: Interval between health check analysis
                                sweeps. Each sweep may remove hosts or return hosts
                                to the pool.
                              type: string
                            maxEjectionPercent:
                              description: The maximum % of an upstream cluster that
                                can be ejected due to outlier detection. Defaults
                                to 10% but will eject at least one host regardless
                                of the value.
                              format: int32
                              type: integer
                            maxFailures:
                              description: MaxFailures is the count of consecutive
                                failures that results in a host being removed from
                                the pool.
                              format: int32
                              type: integer
                          type: object
                        peer:
                          description: Peer is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "tcp", "http" and "grpc". Anything else
                            is treated as tcp. This enables protocol aware features
                            like per-request metrics and connection pooling, tracing,
                            routing etc.
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceintentions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceintentions.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceIntentions
    listKind: ServiceIntentionsList
    plural: serviceintentions
    shortNames:
    - service-intentions
    singular: serviceintentions
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceIntentions is the Schema for the serviceintentions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceIntentionsSpec defines the desired state of ServiceIntentions.
            properties:
              destination:
                description: Destination is the intention destination that will have
                  the authorization granted to.
                properties:
                  name:
                    description: Name is the destination of all intentions defined
                      in this config entry. This may be set to the wildcard character
                      (*) to match all services that don't otherwise have intentions
                      defined.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace the config entry
                      will apply to. This may be set to the wildcard character (*)
                      to match all services in all namespaces that don't otherwise
                      have intentions defined.
                    type: string
                type: object
              jwt:
                description: JWT specifies the configuration to validate a JSON Web
                  Token for all incoming requests.
                properties:
                  providers:
                    description: Providers is a list of providers to consider when
                      verifying a JWT.
                    items:
                      properties:
                        name:
                          description: Name is the name of the JWT provider. There
                            MUST be a corresponding "jwt-provider" config entry with
                            this name.
                          type: string
                        verifyClaims:
                          description: VerifyClaims is a list of additional claims
                            to verify in a JWT's payload.
                          items:
                            properties:
                              path:
                                description: Path is the path to the claim in the
                                  token JSON.
                                items:
                                  type: string
                                type: array
                              value:
                                description: Value is the expected value at the given
                                  path. If the type at the path is a list then we
                                  verify that this value is contained in the list.
                                  If the type at the path is a string then we verify
                                  that this value matches.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              sources:
                description: Sources is the list of all intention sources and the
                  authorization granted to those sources. The order of this list does
                  not matter, but out of convenience Consul will always store this
                  reverse sorted by intention precedence, as that is the order that
                  they will be evaluated at enforcement time.
                items:
                  properties:
                    action:
                      description: Action is required for an L4 intention, and should
                        be set to one of "allow" or "deny" for the action that should
                        be taken if this intention matches a request.
                      type: string
                    description:
                      description: Description for the intention. This is not used
                        by Consul, but is presented in API responses to assist tooling.
                      type: string
                    name:
                      description: Name is the source of the intention. This is the
                        name of a Consul service. The service doesn't need to be registered.
                      type: string
                    namespace:
                      description: Namespace is the namespace for the Name parameter.
                      type: string
                    partition:
                      description: Partition is the Admin Partition for the Name parameter.
                      type: string
                    peer:
                      description: Peer is the peer name for the Name parameter.
                      type: string
                    permissions:
                      description: Permissions is the list of all additional L7 attributes
                        that extend the intention match criteria. Permission precedence
                        is applied top to bottom. For any given request the first
                        permission to match in the list is terminal and stops further
                        evaluation. As with L4 intentions, traffic that fails to match
                        any of the provided permissions in this intention will be
                        subject to the default intention behavior is defined by the
                        default ACL policy. This should be omitted for an L4 intention
                        as it is mutually exclusive with the Action field.
                      items:
                        properties:
                          action:
                            description: Action is one of "allow" or "deny" for the
                              action that should be taken if this permission matches
                              a request.
                            type: string
                          http:
                            description: HTTP is a set of HTTP-specific authorization
                              criteria.
                            properties:
                              header:
                                description: Header is a set of criteria that can
                                  match on HTTP request headers. If more than one
                                  is configured all must match for the overall match
                                  to apply.
                                items:
                                  properties:
                                    exact:
                                      description: Exact matches if the header with
                                        the given name is this value.
                                      type: string
                                    invert:
                                      description: Invert inverts the logic of the
                                        match.
                                      type: boolean
                                    name:
                                      description: Name is the name of the header
                                        to match.
                                      type: string
                                    prefix:
                                      description: Prefix matches if the header with
                                        the given name has this prefix.
                                      type: string
                                    present:
                                      description: Present matches if the header with
                                        the given name is present with any value.
                                      type: boolean
                                    regex:
                                      description: Regex matches if the header with
                                        the given name matches this pattern.
                                      type: string
                                    suffix:
                                      description: Suffix matches if the header with
                                        the given name has this suffix.
                                      type: string
                                  type: object
                                type: array
                              methods:
                                description: Methods is a list of HTTP methods for
                                  which this match applies. If unspecified all HTTP
                                  methods are matched. If provided the names must
                                  be a valid method.
                                items:
                                  type: string
                                type: array
                              pathExact:
                                description: PathExact is the exact path to match
                                  on the HTTP request path.
                                type: string
                              pathPrefix:
                                description: PathPrefix is the path prefix to match
                                  on the HTTP request path.
                                type: string
                              pathRegex:
                                description: PathRegex is the regular expression to
                                  match on the HTTP request path.
                                type: string
                            type: object
                          jwt:
                            description: JWT specifies configuration to validate a
                              JSON Web Token for incoming requests.
                            properties:
                              providers:
                                description: Providers is a list of providers to consider
                                  when verifying a JWT.
                                items:
                                  properties:
                                    name:
                                      description: Name is the name of the JWT provider.
                                        There MUST be a corresponding "jwt-provider"
                                        config entry with this name.
                                      type: string
                                    verifyClaims:
                                      description: VerifyClaims is a list of additional
                                        claims to verify in a JWT's payload.
                                      items:
                                        properties:
                                          path:
                                            description: Path is the path to the claim
                                              in the token JSON.
                                            items:
                                              type: string
                                            type: array
                                          value:
                                            description: Value is the expected value
                                              at the given path. If the type at the
                                              path is a list then we verify that this
                                              value is contained in the list. If the
                                              type at the path is a string then we
                                              verify that this value matches.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            type: object
                        type: object
                      type: array
                    samenessGroup:
                      description: SamenessGroup is the name of the sameness group,
                        if applicable.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceresolvers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceresolvers.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceResolver
    listKind: ServiceResolverList
    plural: serviceresolvers
    shortNames:
    - service-resolver
    singular: serviceresolver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceResolver is the Schema for the serviceresolvers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceResolverSpec defines the desired state of ServiceResolver.
            properties:
              connectTimeout:
                description: ConnectTimeout is the timeout for establishing new network
                  connections to this service.
                type: string
              defaultSubset:
                description: DefaultSubset is the subset to use when no explicit subset
                  is requested. If empty the unnamed subset is used.
                type: string
              failover:
                additionalProperties:
                  properties:
                    datacenters:
                      description: Datacenters is a fixed list of datacenters to try
                        during failover.
                      items:
                        type: string
                      type: array
                    namespace:
                      description: Namespace is the namespace to resolve the requested
                        service from to form the failover group of instances. If empty
                        the current namespace is used.
                      type: string
                    policy:
                      description: Policy specifies the exact mechanism used for failover.
                      properties:
                        mode:
                          description: Mode specifies the type of failover that will
                            be performed. Valid values are "sequential", "" (equivalent
                            to "sequential") and "order-by-locality".
                          type: string
                        regions:
                          description: Regions is the ordered list of the regions
                            of the failover targets. Valid values can be "us-west-1",
                            "us-west-2", and so on.
                          items:
                            type: string
                          type: array
                      type: object
                    samenessGroup:
                      description: SamenessGroup is the name of the sameness group
                        to try during failover.
                      type: string
                    service:
                      description: Service is the service to resolve instead of the
                        default as the failover group of instances during failover.
                      type: string
                    serviceSubset:
                      description: ServiceSubset is the named subset of the requested
                        service to resolve as the failover group of instances. If
                        empty the default subset for the requested service is used.
                      type: string
                    targets:
                      description: Targets specifies a fixed list of failover targets
                        to try during failover.
                      items:
                        properties:
                          datacenter:
                            description: Datacenter specifies the datacenter to try
                              during failover.
                            type: string
                          namespace:
                            description: Namespace specifies the namespace to try
                              during failover.
                            type: string
                          partition:
                            description: Partition specifies the partition to try
                              during failover.
                            type: string
                          peer:
                            description: Peer specifies the name of the cluster peer
                              to try during failover.
                            type: string
                          service:
                            description: Service specifies the name of the service
                              to try during failover.
                            type: string
                          serviceSubset:
                            description: ServiceSubset specifies the service subset
                              to try during failover.
                            type: string
                        type: object
                      type: array
                  type: object
                description: Failover controls when and how to reroute traffic to
                  an alternate pool of service instances. The map is keyed by the
                  service subset it applies to and the special string "*" is a wildcard
                  that applies to any subset not otherwise specified here.
                type: object
              loadBalancer:
                description: LoadBalancer determines the load balancing policy and
                  configuration for services issuing requests to this upstream service.
                properties:
                  hashPolicies:
                    description: HashPolicies is a list of hash policies to use for
                      hashing load balancing algorithms. Hash policies are evaluated
                      individually and combined such that identical lists result in
                      the same hash. If no hash policies are present, or none are
                      successfully evaluated, then a random backend host will be selected.
                    items:
                      properties:
                        cookieConfig:
                          description: CookieConfig contains configuration for the
                            "cookie" hash policy type.
                          properties:
                            path:
                              description: Path is the path to set for the cookie.
                              type: string
                            session:
                              description: Session determines whether to generate
                                a session cookie with no expiration.
                              type: boolean
                            ttl:
                              description: TTL is the ttl for generated cookies. Cannot
                                be specified for session cookies.
                              type: string
                          type: object
                        field:
                          description: Field is the attribute type to hash on. Must
                            be one of "header", "cookie", or "query_parameter". Cannot
                            be specified along with sourceIP.
                          type: string
                        fieldValue:
                          description: FieldValue is the value to hash. ie. header
                            name, cookie name, URL query parameter name Cannot be
                            specified along with sourceIP.
                          type: string
                        sourceIP:
                          description: SourceIP determines whether the hash should
                            be of the source IP rather than of a field and field value.
                            Cannot be specified along with field or fieldValue.
                          type: boolean
                        terminal:
                          description: Terminal will short circuit the computation
                            of the hash when multiple hash policies are present. If
                            a hash is computed when a Terminal policy is evaluated,
                            then that hash will be used and subsequent hash policies
                            will be ignored.
                          type: boolean
                      type: object
                    type: array
                  leastRequestConfig:
                    description: LeastRequestConfig contains configuration for the
                      "leastRequest" policy type.
                    properties:
                      choiceCount:
                        description: ChoiceCount determines the number of random healthy
                          hosts from which to select the one with the least requests.
                        format: int32
                        type: integer
                    type: object
                  policy:
                    description: Policy is the load balancing policy used to select
                      a host.
                    type: string
                  ringHashConfig:
                    description: RingHashConfig contains configuration for the "ringHash"
                      policy type.
                    properties:
                      maximumRingSize:
                        description: MaximumRingSize determines the maximum number
                          of entries in the hash ring.
                        format: int64
                        type: integer
                      minimumRingSize:
                        description: MinimumRingSize determines the minimum number
                          of entries in the hash ring.
                        format: int64
                        type: integer
                    type: object
                type: object
              prioritizeByLocality:
                description: PrioritizeByLocality controls whether the locality of
                  services within the local partition will be used to prioritize connectivity.
                properties:
                  mode:
                    description: 'Mode specifies the type of prioritization that will
                      be performed when selecting nodes in the local partition. Valid
                      values are: "" (default "none"), "none", and "failover".'
                    type: string
                type: object
              redirect:
                description: Redirect when configured, all attempts to resolve the
                  service this resolver defines will be substituted for the supplied
                  redirect EXCEPT when the redirect has already been applied. When
                  substituting the supplied redirect, all other fields besides Kind,
                  Name, and Redirect will be ignored.
                properties:
                  datacenter:
                    description: Datacenter is the datacenter to resolve the service
                      from instead of the current one.
                    type: string
                  namespace:
                    description: Namespace is the Consul namespace to resolve the
                      service from instead of the current namespace. If empty the
                      current namespace is assumed.
                    type: string
                  partition:
                    description: Partition is the Consul partition to resolve the
                      service from instead of the current partition. If empty the
                      current partition is assumed.
                    type: string
                  peer:
                    description: Peer is the name of the cluster peer to resolve the
                      service from instead of the current one.
                    type: string
                  samenessGroup:
                    description: SamenessGroup is the name of the sameness group to
                      resolve the service from instead of the current one.
                    type: string
                  service:
                    description: Service is a service to resolve instead of the current
                      service.
                    type: string
                  serviceSubset:
                    description: ServiceSubset is a named subset of the given service
                      to resolve instead of one defined as that service's DefaultSubset
                      If empty the default subset is used.
                    type: string
                type: object
              requestTimeout:
                description: RequestTimeout is the timeout for receiving an HTTP response
                  from this service before the connection is terminated.
                type: string
              subsets:
                additionalProperties:
                  properties:
                    filter:
                      description: Filter is the filter expression to be used for
                        selecting instances of the requested service. If empty all
                        healthy instances are returned. This expression can filter
                        on the same selectors as the Health API endpoint.
                      type: string
                    onlyPassing:
                      description: OnlyPassing specifies the behavior of the resolver's
                        health check interpretation. If this is set to false, instances
                        with checks in the passing as well as the warning states will
                        be considered healthy. If this is set to true, only instances
                        with checks in the passing state will be considered healthy.
                      type: boolean
                  type: object
                description: Subsets is map of subset name to subset definition for
                  all usable named subsets of this service. The map key is the name
                  of the subset and all names must be valid DNS subdomain elements.
                  This may be empty, in which case only the unnamed default subset
                  will be usable.
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicerouters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicerouters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceRouter
    listKind: ServiceRouterList
    plural: servicerouters
    shortNames:
    - service-router
    singular: servicerouter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceRouter is the Schema for the servicerouters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceRouterSpec defines the desired state of ServiceRouter.
            properties:
              routes:
                description: Routes are the list of routes to consider when processing
                  L7 requests. The first route to match in the list is terminal and
                  stops further evaluation. Traffic that fails to match any of the
                  provided routes will be routed to the default service.
                items:
                  properties:
                    destination:
                      description: Destination controls how to proxy the matching
                        request(s) to a service.
                      properties:
                        idleTimeout:
                          description: IdleTimeout is total amount of time permitted
                            for the request stream to be idle.
                          type: string
                        namespace:
                          description: Namespace is the Consul namespace to resolve
                            the service from instead of the current namespace. If
                            empty the current namespace is assumed.
                          type: string
                        numRetries:
                          description: NumRetries is the number of times to retry
                            the request when a retryable result occurs
                          format: int32
                          type: integer
                        partition:
                          description: Partition is the Consul partition to resolve
                            the service from instead of the current partition. If
                            empty the current partition is assumed.
                          type: string
                        prefixRewrite:
                          description: PrefixRewrite defines how to rewrite the HTTP
                            request path before proxying it to its final destination.
                            This requires that either match.http.pathPrefix or match.http.pathExact
                            be configured on this route.
                          type: string
                        requestHeaders:
                          description: Allow HTTP header manipulation to be configured.
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              description: Add is a set of name -> value pairs that
                                should be appended to the request or response (i.e.
                                allowing duplicates if the same header already exists).
                              type: object
                            remove:
                              description: Remove is the set of header names that
                                should be stripped from the request or response.
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              description: Set is a set of name -> value pairs that
                                should be added to the request or response, overwriting
                                any existing header values of the same name.
                              type: object
                          type: object
                        requestTimeout:
                          description: RequestTimeout is the total amount of time
                            permitted for the entire downstream request (and retries)
                            to be processed.
                          type: string
                        responseHeaders:
                          description: HTTPHeaderModifiers is a set of rules for HTTP
                            header modification that should be performed by proxies
                            as the request passes through them. It can operate on
                            either request or response headers depending on the context
                            in which it is used.
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              description: Add is a set of name -> value pairs that
                                should be appended to the request or response (i.e.
                                allowing duplicates if the same header already exists).
                              type: object
                            remove:
                              description: Remove is the set of header names that
                                should be stripped from the request or response.
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              description: Set is a set of name -> value pairs that
                                should be added to the request or response, overwriting
                                any existing header values of the same name.
                              type: object
                          type: object
                        retryOnConnectFailure:
                          description: RetryOnConnectFailure allows for connection
                            failure errors to trigger a retry.
                          type: boolean
                        retryOnStatusCodes:
                          description: RetryOnStatusCodes is a flat list of http response
                            status codes that are eligible for retry.
                          items:
                            format: int32
                            type: integer
                          type: array
                        service:
                          description: Service is the service to resolve instead of
                            the default service. If empty then the default service
                            name is used.
                          type: string
                        serviceSubset:
                          description: ServiceSubset is a named subset of the given
                            service to resolve instead of the one defined as that
                            service's DefaultSubset. If empty, the default subset
                            is used.
                          type: string
                      type: object
                    match:
                      description: Match is a set of criteria that can match incoming
                        L7 requests. If empty or omitted it acts as a catch-all.
                      properties:
                        http:
                          description: HTTP is a set of http-specific match criteria.
                          properties:
                            header:
                              description: Header is a set of criteria that can match
                                on HTTP request headers. If more than one is configured
                                all must match for the overall match to apply.
                              items:
                                properties:
                                  exact:
                                    description: Exact will match if the header with
                                      the given name is this value.
                                    type: string
                                  invert:
                                    description: Invert inverts the logic of the match.
                                    type: boolean
                                  name:
                                    description: Name is the name of the header to
                                      match.
                                    type: string
                                  prefix:
                                    description: Prefix will match if the header with
                                      the given name has this prefix.
                                    type: string
                                  present:
                                    description: Present will match if the header
                                      with the given name is present with any value.
                                    type: boolean
                                  regex:
                                    description: Regex will match if the header with
                                      the given name matches this pattern.
                                    type: string
                                  suffix:
                                    description: Suffix will match if the header with
                                      the given name has this suffix.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            methods:
                              description: Methods is a list of HTTP methods for which
                                this match applies. If unspecified all http methods
                                are matched.
                              items:
                                type: string
                              type: array
                            pathExact:
                              description: PathExact is an exact path to match on
                                the HTTP request path.
                              type: string
                            pathPrefix:
                              description: PathPrefix is a path prefix to match on
                                the HTTP request path.
                              type: string
                            pathRegex:
                              description: PathRegex is a regular expression to match
                                on the HTTP request path.
                              type: string
                            queryParam:
                              description: QueryParam is a set of criteria that can
                                match on HTTP query parameters. If more than one is
                                configured all must match for the overall match to
                                apply.
                              items:
                                properties:
                                  exact:
                                    description: Exact will match if the query parameter
                                      with the given name is this value.
                                    type: string
                                  name:
                                    description: Name is the name of the query parameter
                                      to match on.
                                    type: string
                                  present:
                                    description: Present will match if the query parameter
                                      with the given name is present with any value.
                                    type: boolean
                                  regex:
                                    description: Regex will match if the query parameter
                                      with the given name matches this pattern.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicesplitters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicesplitters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceSplitter
    listKind: ServiceSplitterList
    plural: servicesplitters
    shortNames:
    - service-splitter
    singular: servicesplitter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceSplitter is the Schema for the servicesplitters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSplitterSpec defines the desired state of ServiceSplitter.
            properties:
              splits:
                description: Splits defines how much traffic to send to which set
                  of service instances during a traffic split. The sum of weights
                  across all splits must add up to 100.
                items:
                  properties:
                    namespace:
                      description: Namespace is the Consul namespace to resolve the
                        service from instead of the current namespace. If empty the
                        current namespace is assumed.
                      type: string
                    partition:
                      description: Partition is the Consul partition to resolve the
                        service from instead of the current partition. If empty the
                        current partition is assumed.
                      type: string
                    requestHeaders:
                      description: Allow HTTP header manipulation to be configured.
                      properties:
                        add:
                          additionalProperties:
                            type: string
                          description: Add is a set of name -> value pairs that should
                            be appended to the request or response (i.e. allowing
                            duplicates if the same header already exists).
                          type: object
                        remove:
                          description: Remove is the set of header names that should
                            be stripped from the request or response.
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          description: Set is a set of name -> value pairs that should
                            be added to the request or response, overwriting any existing
                            header values of the same name.
                          type: object
                      type: object
                    responseHeaders:
                      description: HTTPHeaderModifiers is a set of rules for HTTP
                        header modification that should be performed by proxies as
                        the request passes through them. It can operate on either
                        request or response headers depending on the context in which
                        it is used.
                      properties:
                        add:
                          additionalProperties:
                            type: string
                          description: Add is a set of name -> value pairs that should
                            be appended to the request or response (i.e. allowing
                            duplicates if the same header already exists).
                          type: object
                        remove:
                          description: Remove is the set of header names that should
                            be stripped from the request or response.
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          description: Set is a set of name -> value pairs that should
                            be added to the request or response, overwriting any existing
                            header values of the same name.
                          type: object
                      type: object
                    service:
                      description: Service is the service to resolve instead of the
                        default.
                      type: string
                    serviceSubset:
                      description: ServiceSubset is a named subset of the given service
                        to resolve instead of one defined as that service's DefaultSubset.
                        If empty the default subset is used.
                      type: string
                    weight:
                      description: Weight is a value between 0 and 100 reflecting
                        what portion of traffic should be directed to this split.
                        The smallest representable weight is 1/10000 or .01%.
                      type: number
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-tcproutes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tcproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: TCPRoute
    listKind: TCPRouteList
    plural: tcproutes
    singular: tcproute
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: TCPRoute provides a way to route TCP requests. When combined with a Gateway listener, it can be used to forward connections on the port specified by the listener to a set of backends specified by the TCPRoute.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of TCPRoute.
              properties:
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  description: Rules are a list of TCP matchers and actions.
                  items:
                    description: TCPRouteRule is the configuration for a given rule.
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. If unspecified or invalid (refers to a non-existent resource or a Service with no endpoints), the underlying implementation MUST actively reject connection attempts to this backend. Connection rejections must respect weight; if an invalid backend is requested to have 80% of connections, then 80% of connections must be rejected instead. \n Support: Core for Kubernetes Service \n Support: Implementation-specific for any other resource \n Support for weight: Extended"
                        items:
                          description: "BackendRef defines how a Route should forward a request to a Kubernetes resource. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details."
                          properties:
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        minItems: 1
                        type: array
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
              required:
                - rules
              type: object
            status:
              description: Status defines the current state of TCPRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-terminatinggateways.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: terminatinggateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: TerminatingGateway
    listKind: TerminatingGatewayList
    plural: terminatinggateways
    shortNames:
    - terminating-gateway
    singular: terminatinggateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TerminatingGateway is the Schema for the terminatinggateways
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TerminatingGatewaySpec defines the desired state of TerminatingGateway.
            properties:
              services:
                description: Services is a list of service names represented by the
                  terminating gateway.
                items:
                  description: A LinkedService is a service represented by a terminating
                    gateway.
                  properties:
                    caFile:
                      description: CAFile is the optional path to a CA certificate
                        to use for TLS connections from the gateway to the linked
                        service.
                      type: string
                    certFile:
                      description: CertFile is the optional path to a client certificate
                        to use for TLS connections from the gateway to the linked
                        service.
                      type: string
                    keyFile:
                      description: KeyFile is the optional path to a private key to
                        use for TLS connections from the gateway to the linked service.
                      type: string
                    name:
                      description: Name is the name of the service, as defined in
                        Consul's catalog.
                      type: string
                    namespace:
                      description: The namespace the service is registered in.
                      type: string
                    sni:
                      description: SNI is the optional name to specify during the
                        TLS handshake with a linked service.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-tlsroutes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: "The TLSRoute resource is similar to TCPRoute, but can be configured to match against TLS-specific metadata. This allows more flexibility in matching streams for a given TLS listener. \n If you need to forward traffic to a single target for a TLS listener, you could choose to use a TCPRoute with a TLS listener."
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of TLSRoute.
              properties:
                hostnames:
                  description: "Hostnames defines a set of SNI names that should match against the SNI attribute of TLS ClientHello message in TLS handshake. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n 1. IPs are not allowed in SNI names per RFC 6066. 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard    label must appear by itself as the first label. \n If a hostname is specified by both the Listener and TLSRoute, there must be at least one intersecting hostname for the TLSRoute to be attached to the Listener. For example: \n * A Listener with `test.example.com` as the hostname matches TLSRoutes   that have either not specified any hostnames, or have specified at   least one of `test.example.com` or `*.example.com`. * A Listener with `*.example.com` as the hostname matches TLSRoutes   that have either not specified any hostnames or have specified at least   one hostname that matches the Listener hostname. For example,   `test.example.com` and `*.example.com` would both match. On the other   hand, `example.com` and `test.example.net` would not match. \n If both the Listener and TLSRoute have specified hostnames, any TLSRoute hostnames that do not match the Listener hostname MUST be ignored. For example, if a Listener specified `*.example.com`, and the TLSRoute specified `test.example.com` and `test.example.net`, `test.example.net` must not be considered for a match. \n If both the Listener and TLSRoute have specified hostnames, and none match with the criteria above, then the TLSRoute is not accepted. The implementation must raise an 'Accepted' Condition with a status of `False` in the corresponding RouteParentStatus. \n Support: Core"
                  items:
                    description: "Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: \n  1. IPs are not allowed.  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard     label must appear by itself as the first label. \n Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. `*.example.com`). \n Note that as per RFC1035 and RFC1123, a *label* must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed."
                    maxLength: 253
                    minLength: 1
                    pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  maxItems: 16
                  type: array
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  description: Rules are a list of TLS matchers and actions.
                  items:
                    description: TLSRouteRule is the configuration for a given rule.
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. If unspecified or invalid (refers to a non-existent resource or a Service with no endpoints), the rule performs no forwarding; if no filters are specified that would result in a response being sent, the underlying implementation must actively reject request attempts to this backend, by rejecting the connection or returning a 500 status code. Request rejections must respect weight; if an invalid backend is requested to have 80% of requests, then 80% of requests must be rejected instead. \n Support: Core for Kubernetes Service \n Support: Implementation-specific for any other resource \n Support for weight: Extended"
                        items:
                          description: "BackendRef defines how a Route should forward a request to a Kubernetes resource. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details."
                          properties:
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        minItems: 1
                        type: array
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
              required:
                - rules
              type: object
            status:
              description: Status defines the current state of TLSRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-udproutes.yaml
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/1538
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
    gateway.networking.k8s.io/bundle-version: v0.6.2
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: udproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
      - gateway-api
    kind: UDPRoute
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: UDPRoute provides a way to route UDP traffic. When combined with a Gateway listener, it can be used to forward traffic on the port specified by the listener to a set of backends specified by the UDPRoute.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of UDPRoute.
              properties:
                parentRefs:
                  description: "ParentRefs references the resources (usually Gateways) that a Route wants to be attached to. Note that the referenced parent resource needs to allow this for the attachment to be complete. For Gateways, that means the Gateway needs to allow attachment from Routes of this kind and namespace. \n The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources such as one of the route kinds. \n It is invalid to reference an identical parent more than once. It is valid to reference multiple distinct sections within the same parent resource, such as 2 Listeners within a Gateway. \n It is possible to separately reference multiple distinct objects that may be collapsed by an implementation. For example, some implementations may choose to merge compatible Gateway Listeners together. If that is the case, the list of routes attached to those resources should also be merged. \n Note that for ParentRefs that cross namespace boundaries, there are specific rules. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example, Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference."
                  items:
                    description: "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). The only kind of parent resource with \"Core\" support is Gateway. This API may be extended in the future to support additional kinds of parent resources, such as HTTPRoute. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid."
                    properties:
                      group:
                        default: gateway.networking.k8s.io
                        description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Gateway
                        description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: "Name is the name of the referent. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      sectionName:
                        description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 32
                  type: array
                rules:
                  description: Rules are a list of UDP matchers and actions.
                  items:
                    description: UDPRouteRule is the configuration for a given rule.
                    properties:
                      backendRefs:
                        description: "BackendRefs defines the backend(s) where matching requests should be sent. If unspecified or invalid (refers to a non-existent resource or a Service with no endpoints), the underlying implementation MUST actively reject connection attempts to this backend. Packet drops must respect weight; if an invalid backend is requested to have 80% of the packets, then 80% of packets must be dropped instead. \n Support: Core for Kubernetes Service Support: Implementation-specific for any other resource \n Support for weight: Extended"
                        items:
                          description: "BackendRef defines how a Route should forward a request to a Kubernetes resource. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details."
                          properties:
                            group:
                              default: ""
                              description: Group is the group of the referent. For example, "gateway.networking.k8s.io". When unspecified or empty string, core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Service
                              description: Kind is kind of the referent. For example "HTTPRoute" or "Service". Defaults to "Service" when not specified.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: "Namespace is the namespace of the backend. When unspecified, the local namespace is inferred. \n Note that when a namespace is specified, a ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. \n Support: Core"
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: Port specifies the destination port number to use for this resource. Port is required when the referent is a Kubernetes Service. In this case, the port number is the service port number, not the target port. For other resources, destination port might be derived from the referent resource or this field.
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            weight:
                              default: 1
                              description: "Weight specifies the proportion of requests forwarded to the referenced backend. This is computed as weight/(sum of all weights in this BackendRefs list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. Weight is not a percentage and the sum of weights does not need to equal 100. \n If only one backend is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weight is set to 0, no traffic should be forwarded for this entry. If unspecified, weight defaults to 1. \n Support for this field varies based on the context where used."
                              format: int32
                              maximum: 1000000
                              minimum: 0
                              type: integer
                          required:
                            - name
                          type: object
                        maxItems: 16
                        minItems: 1
                        type: array
                    type: object
                  maxItems: 16
                  minItems: 1
                  type: array
              required:
                - rules
              type: object
            status:
              description: Status defines the current state of UDPRoute.
              properties:
                parents:
                  description: "Parents is a list of parent resources (usually Gateways) that are associated with the route, and the status of the route with respect to each parent. When this route attaches to a parent, the controller that manages the parent must add an entry to this list when the controller first sees the route and should update the entry as appropriate when the route or gateway is modified. \n Note that parent references that cannot be resolved by an implementation of this API will not be added to this list. Implementations of this API can only populate Route status for the Gateways/parent resources they are responsible for. \n A maximum of 32 Gateways will be represented in this list. An empty list means the route has not been attached to any Gateway."
                  items:
                    description: RouteParentStatus describes the status of a route with respect to an associated Parent.
                    properties:
                      conditions:
                        description: "Conditions describes the status of the route with respect to the Gateway. Note that the route's availability is also subject to the Gateway's own status conditions and listener status. \n If the Route's ParentRef specifies an existing Gateway that supports Routes of this kind AND that Gateway's controller has sufficient access, then that Gateway's controller MUST set the \"Accepted\" condition on the Route, to indicate whether the route has been accepted or rejected by the Gateway, and why. \n A Route MUST be considered \"Accepted\" if at least one of the Route's rules is implemented by the Gateway. \n There are a number of cases where the \"Accepted\" condition may not be set due to lack of controller visibility, that includes when: \n * The Route refers to a non-existent parent. * The Route is of a type that the controller does not support. * The Route is in a namespace the controller does not have access to."
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n \ttype FooStatus struct{ \t    // Represents the observations of a foo's current state. \t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" \t    // +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map \t    // +listMapKey=type \t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        maxItems: 8
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      controllerName:
                        description: "ControllerName is a domain/path string that indicates the name of the controller that wrote this status. This corresponds with the controllerName field on GatewayClass. \n Example: \"example.net/gateway-controller\". \n The format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). \n Controllers MUST populate this field when writing status. Controllers should ensure that entries to status populated with their ControllerName are cleaned up when they are no longer necessary."
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                        type: string
                      parentRef:
                        description: ParentRef corresponds with a ParentRef in the spec that this RouteParentStatus struct describes the status of.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core"
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Gateway
                            description: "Kind is kind of the referent. \n Support: Core (Gateway) \n Support: Implementation-specific (Other Resources)"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: "Name is the name of the referent. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n Support: Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n <gateway:experimental>"
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          sectionName:
                            description: "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core"
                            maxLength: 253
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                        required:
                          - name
                        type: object
                    required:
                      - controllerName
                      - parentRef
                    type: object
                  maxItems: 32
                  type: array
              required:
                - parents
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/connect-inject-clusterrole.yaml
# The ClusterRole to enable the Connect injector to get, list, watch and patch MutatingWebhookConfiguration.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-connect-injector
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
rules:
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults
  - serviceresolvers
  - proxydefaults
  - meshes
  - exportedservices
  - servicerouters
  - servicesplitters
  - serviceintentions
  - ingressgateways
  - terminatinggateways
  - gatewayclassconfigs
  - meshservices
  - samenessgroups
  - controlplanerequestlimits
  - jwtproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults/status
  - serviceresolvers/status
  - proxydefaults/status
  - meshes/status
  - exportedservices/status
  - servicerouters/status
  - servicesplitters/status
  - serviceintentions/status
  - ingressgateways/status
  - terminatinggateways/status
  - samenessgroups/status
  - controlplanerequestlimits/status
  - jwtproviders/status
  verbs:
  - get
  - patch
  - update
- apiGroups: [ "" ]
  resources: [ "secrets", "serviceaccounts", "endpoints", "services", "namespaces", "nodes" ]
  verbs:
  - create
  - get
  - list
  - watch
  - delete
  - update
- apiGroups: [ "rbac.authorization.k8s.io" ]
  resources: [ "roles", "rolebindings" ]
  verbs:
  - get
  - list
  - watch
  - delete
  - create
  - update
- apiGroups: [ "" ]
  resources:
  - pods
  verbs:
  - "get"
  - "list"
  - "watch"
  - "update"
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups: [ "policy" ]
  resources: [ "podsecuritypolicies" ]
  verbs:
  - use
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - httproutes
  - tcproutes
  - referencegrants
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/finalizers
  - gateways/finalizers
  - httproutes/finalizers
  - tcproutes/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - tcproutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - create
    - get
    - list
    - update
    - watch
    - delete
- apiGroups:
    - core
  resources:
    - services
  verbs:
    - watch
    - list
- apiGroups: [ "" ]
  resources: [ "secrets" ]
  verbs:
    - "get"
    - "list"
    - "watch"
---
# Source: consul/templates/gateway-cleanup-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-gateway-cleanup
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-cleanup
rules:
  - apiGroups:
    - consul.hashicorp.com
    resources:
    - gatewayclassconfigs
    verbs:
    - get
    - delete
  - apiGroups:
    - gateway.networking.k8s.io
    resources:
    - gatewayclasses
    verbs:
    - get
    - delete
---
# Source: consul/templates/gateway-resources-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-gateway-resources
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-resources
rules:
  - apiGroups:
    - consul.hashicorp.com
    resources:
    - gatewayclassconfigs
    verbs:
    - get
    - update
    - create
  - apiGroups:
    - gateway.networking.k8s.io
    resources:
    - gatewayclasses
    verbs:
    - get
    - update
    - create
---
# Source: consul/templates/server-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs:
  - get
---
# Source: consul/templates/webhook-cert-manager-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  resourceNames:
  - consul-webhook-cert-manager
  verbs:
  - get
---
# Source: consul/templates/connect-inject-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-connect-injector
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-connect-injector
subjects:
- kind: ServiceAccount
  name: consul-connect-injector
  namespace: default
---
# Source: consul/templates/gateway-cleanup-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-gateway-cleanup
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-cleanup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-gateway-cleanup
subjects:
  - kind: ServiceAccount
    name: consul-gateway-cleanup
    namespace: default
---
# Source: consul/templates/gateway-resources-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-gateway-resources
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-resources
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-gateway-resources
subjects:
  - kind: ServiceAccount
    name: consul-gateway-resources
    namespace: default
---
# Source: consul/templates/server-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-server
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-server
subjects:
- kind: ServiceAccount
  name: consul-server
  namespace: default
---
# Source: consul/templates/webhook-cert-manager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-webhook-cert-manager
subjects:
- kind: ServiceAccount
  name: consul-webhook-cert-manager
  namespace: default
---
# Source: consul/templates/connect-inject-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: consul-connect-inject-leader-election
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: consul/templates/server-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
rules: []
---
# Source: consul/templates/connect-inject-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consul-connect-inject-leader-election
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: consul-connect-inject-leader-election
subjects:
- kind: ServiceAccount
  name: consul-connect-injector
  namespace: default
---
# Source: consul/templates/server-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: consul-server
subjects:
  - kind: ServiceAccount
    name: consul-server
---
# Source: consul/templates/connect-inject-service.yaml
# The service for the Connect sidecar injector
apiVersion: v1
kind: Service
metadata:
  name: consul-connect-injector
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  ports:
  - port: 443
    targetPort: 8080
  selector:
    app: consul
    release: "consul"
    component: connect-injector
---
# Source: consul/templates/dns-service.yaml
# Service for Consul DNS.
apiVersion: v1
kind: Service
metadata:
  name: consul-dns
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: dns
spec:
  type: ClusterIP
  ports:
    - name: dns-tcp
      port: 53
      protocol: "TCP"
      targetPort: dns-tcp
    - name: dns-udp
      port: 53
      protocol: "UDP"
      targetPort: dns-udp
  selector:
    app: consul
    release: "consul"
    hasDNS: "true"
---
# Source: consul/templates/server-service.yaml
# Headless service for Consul server DNS entries. This service should only
# point to Consul servers. For access to an agent, one should assume that
# the agent is installed locally on the node and the NODE_IP should be used.
# If the node can't run a Consul agent, then this service can be used to
# communicate directly to a server agent.
apiVersion: v1
kind: Service
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
  annotations:
spec:
  clusterIP: None
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8500
      targetPort: 8500
    - name: grpc
      port: 8502
      targetPort: 8502
    - name: serflan-tcp
      protocol: "TCP"
      port: 8301
      targetPort: 8301
    - name: serflan-udp
      protocol: "UDP"
      port: 8301
      targetPort: 8301
    - name: serfwan-tcp
      protocol: "TCP"
      port: 8302
      targetPort: 8302
    - name: serfwan-udp
      protocol: "UDP"
      port: 8302
      targetPort: 8302
    - name: server
      port: 8300
      targetPort: 8300
    - name: dns-tcp
      protocol: "TCP"
      port: 8600
      targetPort: dns-tcp
    - name: dns-udp
      protocol: "UDP"
      port: 8600
      targetPort: dns-udp
  selector:
    app: consul
    release: "consul"
    component: server
---
# Source: consul/templates/ui-service.yaml
# UI Service for Consul Server
apiVersion: v1
kind: Service
metadata:
  name: consul-ui
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: ui
spec:
  selector:
    app: consul
    release: "consul"
    component: server
  ports:
    - name: http
      port: 80
      targetPort: 8500
---
# Source: consul/templates/connect-inject-deployment.yaml
# The deployment for running the Connect sidecar injector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-connect-injector
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: connect-injector
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: connect-injector
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      serviceAccountName: consul-connect-injector
      containers:
        - name: sidecar-injector
          image: "consul-k8s-control-plane-dev:local"
          ports:
            - containerPort: 8080
              name: webhook-server
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 100
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONSUL_ADDRESSES
              value: consul-server.default.svc
            - name: CONSUL_GRPC_PORT
              value: "8502"
            - name: CONSUL_HTTP_PORT
              value: "8500"
            - name: CONSUL_DATACENTER
              value: dc1
            - name: CONSUL_API_TIMEOUT
              value: 5s
          command:
            - "/bin/sh"
            - "-ec"
            - |
              consul-k8s-control-plane inject-connect \
                -log-level=debug \
                -log-json=false \
                -default-inject=true \
                -consul-image="hashicorppreview/consul:1.16-dev" \
                -consul-dataplane-image="hashicorppreview/consul-dataplane:1.2-dev" \
                -consul-k8s-image="consul-k8s-control-plane-dev:local" \
                -release-name="consul" \
                -release-namespace="default" \
                -resource-prefix=consul \
                -listen=:8080 \
                -default-enable-transparent-proxy=true \
                -enable-cni=false \
                -transparent-proxy-default-overwrite-probes=true \
                -enable-consul-dns=true \
                -default-enable-metrics=false \
                -enable-gateway-metrics=true  \
                -default-enable-metrics-merging=false  \
                -default-merged-metrics-port=20100 \
                -default-prometheus-scrape-port=20200 \
                -default-prometheus-scrape-path="/metrics" \
                -allow-k8s-namespace="*" \
                -tls-cert-dir=/etc/connect-injector/certs \
                -default-envoy-proxy-concurrency=2 \
                -default-enable-sidecar-proxy-lifecycle=true \
                -default-enable-sidecar-proxy-lifecycle-shutdown-drain-listeners=true \
                -default-sidecar-proxy-lifecycle-shutdown-grace-period-seconds=30 \
                -default-sidecar-proxy-lifecycle-graceful-port=20600 \
                -default-sidecar-proxy-lifecycle-graceful-shutdown-path="/graceful_shutdown" \
                -init-container-memory-limit=150Mi \
                -init-container-memory-request=25Mi \
                -init-container-cpu-request=50m \
                -enable-telemetry-collector=false  \
          startupProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 15
            periodSeconds: 2
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 1
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: certs
              mountPath: /etc/connect-injector/certs
              readOnly: true
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 200Mi
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: consul-connect-inject-webhook-cert
---
# Source: consul/templates/webhook-cert-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-webhook-cert-manager
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      heritage: Helm
      release: consul
      component: webhook-cert-manager
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        heritage: Helm
        release: consul
        component: webhook-cert-manager
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": 86c2dee772c01bba5968f417fde4b7d55e4e8c78849ff6cbdb9bbe9fed5219ee
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s-control-plane webhook-cert-manager \
            -log-level=debug \
            -log-json=false \
            -config-file=/bootstrap/config/webhook-config.json \
            -deployment-name=consul-webhook-cert-manager \
            -deployment-namespace=default
        image: consul-k8s-control-plane-dev:local
        name: webhook-cert-manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          runAsUser: 100
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: config
          mountPath: /bootstrap/config
      terminationGracePeriodSeconds: 10
      serviceAccountName: consul-webhook-cert-manager
      volumes:
      - name: config
        configMap:
          name: consul-webhook-cert-manager-config
---
# Source: consul/templates/server-statefulset.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-server
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
spec:
  serviceName: consul-server
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: server
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": 2192d46bb5a2ad7ca657b41ad1cba29c7e9ae35b127090e2071ec57fca2968e4
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: consul
                  release: "consul"
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      serviceAccountName: consul-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      volumes:
        - name: config
          configMap:
            name: consul-server-config
        - name: extra-config
          emptyDir: {}
      initContainers:
      - name: locality-init
        image: consul-k8s-control-plane-dev:local
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
          - "/bin/sh"
          - "-ec"
          - |
            consul-k8s-control-plane fetch-server-region -node-name "$NODE_NAME" -output-file /consul/extra-config/locality.json
        volumeMounts:
          - name: extra-config
            mountPath: /consul/extra-config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          runAsUser: 100
      containers:
        - name: consul
          image: "hashicorppreview/consul:1.16-dev"
          imagePullPolicy: 
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
            
          command:
            - "/bin/sh"
            - "-ec"
            - |

              cp /consul/config/extra-from-values.json /consul/extra-config/extra-from-values.json
              [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g" /consul/extra-config/extra-from-values.json

              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -advertise="${ADVERTISE_IP}" \
                -config-dir=/consul/config \
                -config-file=/consul/extra-config/extra-from-values.json \
                -config-file=/consul/extra-config/locality.json
          volumeMounts:
            - name: data-default
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
            - name: extra-config
              mountPath: /consul/extra-config
          ports:
            - name: http
              containerPort: 8500
            - name: grpc
              containerPort: 8502
              protocol: "TCP"
            - name: serflan-tcp
              containerPort: 8301
              protocol: "TCP"
            - name: serflan-udp
              containerPort: 8301
              protocol: "UDP"
            - name: serfwan-tcp
              containerPort: 8302
              protocol: "TCP"
            - name: serfwan-udp
              containerPort: 8302
              protocol: "UDP"
            - name: server
              containerPort: 8300
            - name: dns-tcp
              containerPort: 8600
              protocol: "TCP"
            - name: dns-udp
              containerPort: 8600
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 100
  volumeClaimTemplates:
    - metadata:
        name: data-default
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: consul/templates/connect-inject-mutatingwebhookconfiguration.yaml
# The MutatingWebhookConfiguration to enable the Connect injector.
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: consul-connect-injector
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
webhooks:
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-proxydefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-proxydefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxydefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-mesh
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-mesh.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-servicedefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicedefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicedefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-serviceresolver
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceresolver.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceresolvers
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-servicerouter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicerouter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicerouters
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-servicesplitter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicesplitter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicesplitters
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-serviceintentions
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceintentions.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceintentions
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-ingressgateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-ingressgateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingressgateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-terminatinggateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-terminatinggateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - terminatinggateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-exportedservices
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-exportedservices.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - exportedservices
  sideEffects: None
- clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-controlplanerequestlimits
  failurePolicy: Fail
  admissionReviewVersions:
    - "v1beta1"
    - "v1"
  name: mutate-controlplanerequestlimit.consul.hashicorp.com
  rules:
    - apiGroups:
        - consul.hashicorp.com
      apiVersions:
        - v1alpha1
      operations:
        - CREATE
        - UPDATE
      resources:
        - controlplanerequestlimits
  sideEffects: None
- name: consul-connect-injector.consul.hashicorp.com
  # The webhook will fail scheduling all pods that are not part of consul if all replicas of the webhook are unhealthy.
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: [ consul ]
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: "/mutate"
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [ "" ]
    apiVersions: [ "v1" ]
    resources: [ "pods" ]
  namespaceSelector:
      matchExpressions:
        - key: "kubernetes.io/metadata.name"
          operator: "NotIn"
          values: ["kube-system","local-path-storage","openebs"]
      
- admissionReviewVersions:
  - v1beta1
  - v1
  clientConfig:
    service:
      name: consul-connect-injector
      namespace: default
      path: /mutate-v1alpha1-jwtprovider
  failurePolicy: Fail
  name: mutate-jwtprovider.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - jwtproviders
  sideEffects: None
---
# Source: consul/templates/tests/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "consul-test"
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: consul-test
      image: "hashicorppreview/consul:1.16-dev"
      env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_HTTP_ADDR
          value: http://$(HOST_IP):8500
      command:
        - "/bin/sh"
        - "-ec"
        - |
            consul members | tee members.txt
            if [ $(grep -c consul-server members.txt) != $(grep consul-server members.txt | grep -c alive) ]
            then
              echo "Failed because not all consul servers are available"
              exit 1
            fi

  restartPolicy: Never
---
# Source: consul/templates/gateway-cleanup-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: consul-gateway-cleanup
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-cleanup
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: consul-gateway-cleanup
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: gateway-cleanup
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      restartPolicy: Never
      serviceAccountName: consul-gateway-cleanup
      containers:
        - name: gateway-cleanup
          image: consul-k8s-control-plane-dev:local
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 100
          command:
            - consul-k8s-control-plane
          args:
            - gateway-cleanup
            - -gateway-class-name=consul
            - -gateway-class-config-name=consul-api-gateway
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "50Mi"
              cpu: "50m"
---
# Source: consul/templates/gateway-resources-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: consul-gateway-resources
  namespace: default
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: gateway-resources
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: consul-gateway-resources
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: gateway-resources
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      restartPolicy: Never
      serviceAccountName: consul-gateway-resources
      containers:
        - name: gateway-resources
          image: consul-k8s-control-plane-dev:local
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 100
          command:
            - consul-k8s-control-plane
          args:
            - gateway-resources
            - -gateway-class-name=consul
            - -gateway-class-config-name=consul-api-gateway
            - -controller-name=consul.hashicorp.com/gateway-controller
            - -app=consul
            - -chart=consul-helm
            - -heritage=Helm
            - -release-name=consul
            - -component=api-gateway # the new stanza
            - -deployment-default-instances=1
            - -deployment-max-instances=1
            - -deployment-min-instances=1
            - -node-selector
            -
              |
                beta.kubernetes.io/arch: amd64
            - -service-type=LoadBalancer
            - -map-privileged-container-ports=0
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "50Mi"
              cpu: "50m"
          volumeMounts:
            - name: config
              mountPath: /consul/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: consul-gateway-resources-config
